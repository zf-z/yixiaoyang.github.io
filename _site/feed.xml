<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Leon&#39;s Blog</title>
    <description>Embedded System, Linux, Python &amp; Ruby</description>
    <link>/</link>
    <atom:link href="/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Fri, 04 Mar 2016 12:19:38 +0800</pubDate>
    <lastBuildDate>Fri, 04 Mar 2016 12:19:38 +0800</lastBuildDate>
    <generator>Jekyll v2.5.3</generator>
    
      <item>
        <title>[Android] Android驱动开发二三事</title>
        <description>&lt;p&gt;Android在嵌入式开发中越来越常见。底层出了linux内核基础的东西外，加了很多中间层的东西。大概梳理一下会遇到的一些问题。&lt;/p&gt;

&lt;h3&gt;Android架构解析&lt;/h3&gt;

&lt;p&gt;一图胜千言&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://elinux.org/images/c/c2/Android-system-architecture.jpg&quot; alt=&quot;android架构图&quot; /&gt;&lt;/p&gt;

&lt;h3&gt;Android驱动&lt;/h3&gt;

&lt;p&gt;4.x以上的系统大同小异，几乎都是先保证linux kernel层驱动 =》 native驱动测试 =》 hal层 =》 framework层 =》 接口层 =》 app层这种方向给上层调用的。legency的方法需要编写驱动so文件打包到app，而最新的hardware service方法则需要编写硬件服务。&lt;/p&gt;

&lt;p&gt;具体来说，legency驱动方法可以不需要Android源代码单独进行编译，完成一个基本legency驱动需要：&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;写LINUX驱动&lt;/li&gt;
  &lt;li&gt;写LINUX应用测试程序&lt;/li&gt;
  &lt;li&gt;写HAL驱动代码，调用linux native接口控制硬件。&lt;/li&gt;
  &lt;li&gt;写JNI接口，用来包装第二步写的应用（要用NDK来编译）生成一个.SO文件，相当于CE下的DLL&lt;/li&gt;
  &lt;li&gt;写JAVA程序,专门写一个类包含.SO文件，然后在JAVA里调用.SO里的函数。例子，可以看NDK里面的Sample文件夹，里面有一些例子&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;对于使用硬件服务方式编写驱动，好处是比较灵活给上层调用，硬件隔离，需要Android源码配合编译，一般编写方式如下：&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;linux 字符设备驱动的编写(kernel/drivers/char/chr_dev/)&lt;/li&gt;
  &lt;li&gt;linux 字符设备驱动的验证程序(openplatform/android/externl/chr_dev/)&lt;/li&gt;
  &lt;li&gt;硬件抽象层(hal)子程序编写(android/hardware/libhardware/moudles/chr_dev/ 及android/hardware/libhardware/include/)&lt;/li&gt;
  &lt;li&gt;jni 程序编写(android/framework/base/services/jni/)&lt;/li&gt;
  &lt;li&gt;aidl 编写(android/framework/base/core/java/android/os/)&lt;/li&gt;
  &lt;li&gt;aidl 接口具体实现(android/framework/base/services/java/com/android/server/)&lt;/li&gt;
  &lt;li&gt;字符设备文件权限设置 (android/system/core/rootdir/ueventd.rc)&lt;/li&gt;
  &lt;li&gt;字符设备ko文件，自动加载设置(android/openplatform/project/common/kk_4.4_overlay/rootfs/sbin/init.rc)&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;之前写个的一个指纹模块驱动代码结构，可以看出相对于传统的linux驱动，android驱动涉及到android架构中的HAL层、framwork（jni、service、接口层），然后才是app进行硬件服务接口调用。&lt;/p&gt;

&lt;div class=&quot;highlighter-coderay&quot;&gt;&lt;div class=&quot;CodeRay&quot;&gt;
  &lt;div class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line-numbers&quot;&gt; &lt;a href=&quot;#n1&quot; name=&quot;n1&quot;&gt;1&lt;/a&gt;&lt;/span&gt;
&lt;span class=&quot;line-numbers&quot;&gt; &lt;a href=&quot;#n2&quot; name=&quot;n2&quot;&gt;2&lt;/a&gt;&lt;/span&gt;hal_jni_biovox2/                                       
&lt;span class=&quot;line-numbers&quot;&gt; &lt;a href=&quot;#n3&quot; name=&quot;n3&quot;&gt;3&lt;/a&gt;&lt;/span&gt;├── cp.sh
&lt;span class=&quot;line-numbers&quot;&gt; &lt;a href=&quot;#n4&quot; name=&quot;n4&quot;&gt;4&lt;/a&gt;&lt;/span&gt;├── development
&lt;span class=&quot;line-numbers&quot;&gt; &lt;a href=&quot;#n5&quot; name=&quot;n5&quot;&gt;5&lt;/a&gt;&lt;/span&gt;│   └── apps
&lt;span class=&quot;line-numbers&quot;&gt; &lt;a href=&quot;#n6&quot; name=&quot;n6&quot;&gt;6&lt;/a&gt;&lt;/span&gt;│       └── BiovoX2 指纹模块的native测试程序
&lt;span class=&quot;line-numbers&quot;&gt; &lt;a href=&quot;#n7&quot; name=&quot;n7&quot;&gt;7&lt;/a&gt;&lt;/span&gt;│           ├── Android.mk
&lt;span class=&quot;line-numbers&quot;&gt; &lt;a href=&quot;#n8&quot; name=&quot;n8&quot;&gt;8&lt;/a&gt;&lt;/span&gt;│           ├── biovox2.c
&lt;span class=&quot;line-numbers&quot;&gt; &lt;a href=&quot;#n9&quot; name=&quot;n9&quot;&gt;9&lt;/a&gt;&lt;/span&gt;│           ├── biovox2.h
&lt;span class=&quot;line-numbers&quot;&gt;&lt;strong&gt;&lt;a href=&quot;#n10&quot; name=&quot;n10&quot;&gt;10&lt;/a&gt;&lt;/strong&gt;&lt;/span&gt;│           ├── code.h
&lt;span class=&quot;line-numbers&quot;&gt;&lt;a href=&quot;#n11&quot; name=&quot;n11&quot;&gt;11&lt;/a&gt;&lt;/span&gt;│           ├── main_entry.c
&lt;span class=&quot;line-numbers&quot;&gt;&lt;a href=&quot;#n12&quot; name=&quot;n12&quot;&gt;12&lt;/a&gt;&lt;/span&gt;│           ├── Makefile
&lt;span class=&quot;line-numbers&quot;&gt;&lt;a href=&quot;#n13&quot; name=&quot;n13&quot;&gt;13&lt;/a&gt;&lt;/span&gt;│           ├── tty.c
&lt;span class=&quot;line-numbers&quot;&gt;&lt;a href=&quot;#n14&quot; name=&quot;n14&quot;&gt;14&lt;/a&gt;&lt;/span&gt;│           ├── tty.h
&lt;span class=&quot;line-numbers&quot;&gt;&lt;a href=&quot;#n15&quot; name=&quot;n15&quot;&gt;15&lt;/a&gt;&lt;/span&gt;│           └── X2Main.c
&lt;span class=&quot;line-numbers&quot;&gt;&lt;a href=&quot;#n16&quot; name=&quot;n16&quot;&gt;16&lt;/a&gt;&lt;/span&gt;├── device
&lt;span class=&quot;line-numbers&quot;&gt;&lt;a href=&quot;#n17&quot; name=&quot;n17&quot;&gt;17&lt;/a&gt;&lt;/span&gt;│   └── softwinner
&lt;span class=&quot;line-numbers&quot;&gt;&lt;a href=&quot;#n18&quot; name=&quot;n18&quot;&gt;18&lt;/a&gt;&lt;/span&gt;│       └── astar-y3
&lt;span class=&quot;line-numbers&quot;&gt;&lt;a href=&quot;#n19&quot; name=&quot;n19&quot;&gt;19&lt;/a&gt;&lt;/span&gt;│           └── init.sun8i.rc 删除蓝牙对ttyS1权限的设置部分
&lt;span class=&quot;line-numbers&quot;&gt;&lt;strong&gt;&lt;a href=&quot;#n20&quot; name=&quot;n20&quot;&gt;20&lt;/a&gt;&lt;/strong&gt;&lt;/span&gt;├── frameworks
&lt;span class=&quot;line-numbers&quot;&gt;&lt;a href=&quot;#n21&quot; name=&quot;n21&quot;&gt;21&lt;/a&gt;&lt;/span&gt;│   └── base
&lt;span class=&quot;line-numbers&quot;&gt;&lt;a href=&quot;#n22&quot; name=&quot;n22&quot;&gt;22&lt;/a&gt;&lt;/span&gt;│       ├── Android.mk
&lt;span class=&quot;line-numbers&quot;&gt;&lt;a href=&quot;#n23&quot; name=&quot;n23&quot;&gt;23&lt;/a&gt;&lt;/span&gt;│       ├── core
&lt;span class=&quot;line-numbers&quot;&gt;&lt;a href=&quot;#n24&quot; name=&quot;n24&quot;&gt;24&lt;/a&gt;&lt;/span&gt;│       │   └── java
&lt;span class=&quot;line-numbers&quot;&gt;&lt;a href=&quot;#n25&quot; name=&quot;n25&quot;&gt;25&lt;/a&gt;&lt;/span&gt;│       │       └── android
&lt;span class=&quot;line-numbers&quot;&gt;&lt;a href=&quot;#n26&quot; name=&quot;n26&quot;&gt;26&lt;/a&gt;&lt;/span&gt;│       │           └── os
&lt;span class=&quot;line-numbers&quot;&gt;&lt;a href=&quot;#n27&quot; name=&quot;n27&quot;&gt;27&lt;/a&gt;&lt;/span&gt;│       │               └── IBiovoxService.aidl 指纹模块接口定义
&lt;span class=&quot;line-numbers&quot;&gt;&lt;a href=&quot;#n28&quot; name=&quot;n28&quot;&gt;28&lt;/a&gt;&lt;/span&gt;│       └── services
&lt;span class=&quot;line-numbers&quot;&gt;&lt;a href=&quot;#n29&quot; name=&quot;n29&quot;&gt;29&lt;/a&gt;&lt;/span&gt;│           ├── java
&lt;span class=&quot;line-numbers&quot;&gt;&lt;strong&gt;&lt;a href=&quot;#n30&quot; name=&quot;n30&quot;&gt;30&lt;/a&gt;&lt;/strong&gt;&lt;/span&gt;│           │   └── com
&lt;span class=&quot;line-numbers&quot;&gt;&lt;a href=&quot;#n31&quot; name=&quot;n31&quot;&gt;31&lt;/a&gt;&lt;/span&gt;│           │       └── android
&lt;span class=&quot;line-numbers&quot;&gt;&lt;a href=&quot;#n32&quot; name=&quot;n32&quot;&gt;32&lt;/a&gt;&lt;/span&gt;│           │           └── server
&lt;span class=&quot;line-numbers&quot;&gt;&lt;a href=&quot;#n33&quot; name=&quot;n33&quot;&gt;33&lt;/a&gt;&lt;/span&gt;│           │               ├── BiovoxService.java 指纹模块硬件服务实现，面向APP层的主要实现
&lt;span class=&quot;line-numbers&quot;&gt;&lt;a href=&quot;#n34&quot; name=&quot;n34&quot;&gt;34&lt;/a&gt;&lt;/span&gt;│           │               └── SystemServer.java
&lt;span class=&quot;line-numbers&quot;&gt;&lt;a href=&quot;#n35&quot; name=&quot;n35&quot;&gt;35&lt;/a&gt;&lt;/span&gt;│           └── jni
&lt;span class=&quot;line-numbers&quot;&gt;&lt;a href=&quot;#n36&quot; name=&quot;n36&quot;&gt;36&lt;/a&gt;&lt;/span&gt;│               ├── Android.mk
&lt;span class=&quot;line-numbers&quot;&gt;&lt;a href=&quot;#n37&quot; name=&quot;n37&quot;&gt;37&lt;/a&gt;&lt;/span&gt;│               ├── com_android_server_BiovoxService.cpp 指纹模块硬件服务对hal层的调用
&lt;span class=&quot;line-numbers&quot;&gt;&lt;a href=&quot;#n38&quot; name=&quot;n38&quot;&gt;38&lt;/a&gt;&lt;/span&gt;│               └── onload.cpp
&lt;span class=&quot;line-numbers&quot;&gt;&lt;a href=&quot;#n39&quot; name=&quot;n39&quot;&gt;39&lt;/a&gt;&lt;/span&gt;├── hardware 硬件hal层的实现
&lt;span class=&quot;line-numbers&quot;&gt;&lt;strong&gt;&lt;a href=&quot;#n40&quot; name=&quot;n40&quot;&gt;40&lt;/a&gt;&lt;/strong&gt;&lt;/span&gt;│   └── libhardware
&lt;span class=&quot;line-numbers&quot;&gt;&lt;a href=&quot;#n41&quot; name=&quot;n41&quot;&gt;41&lt;/a&gt;&lt;/span&gt;│       ├── Android.mk
&lt;span class=&quot;line-numbers&quot;&gt;&lt;a href=&quot;#n42&quot; name=&quot;n42&quot;&gt;42&lt;/a&gt;&lt;/span&gt;│       ├── include
&lt;span class=&quot;line-numbers&quot;&gt;&lt;a href=&quot;#n43&quot; name=&quot;n43&quot;&gt;43&lt;/a&gt;&lt;/span&gt;│       │   └── hardware
&lt;span class=&quot;line-numbers&quot;&gt;&lt;a href=&quot;#n44&quot; name=&quot;n44&quot;&gt;44&lt;/a&gt;&lt;/span&gt;│       │       └── fpm
&lt;span class=&quot;line-numbers&quot;&gt;&lt;a href=&quot;#n45&quot; name=&quot;n45&quot;&gt;45&lt;/a&gt;&lt;/span&gt;│       │           └── biovox2.h
&lt;span class=&quot;line-numbers&quot;&gt;&lt;a href=&quot;#n46&quot; name=&quot;n46&quot;&gt;46&lt;/a&gt;&lt;/span&gt;│       └── modules
&lt;span class=&quot;line-numbers&quot;&gt;&lt;a href=&quot;#n47&quot; name=&quot;n47&quot;&gt;47&lt;/a&gt;&lt;/span&gt;│           └── fpm
&lt;span class=&quot;line-numbers&quot;&gt;&lt;a href=&quot;#n48&quot; name=&quot;n48&quot;&gt;48&lt;/a&gt;&lt;/span&gt;│               ├── Android.mk
&lt;span class=&quot;line-numbers&quot;&gt;&lt;a href=&quot;#n49&quot; name=&quot;n49&quot;&gt;49&lt;/a&gt;&lt;/span&gt;│               └── biovox2.c
&lt;span class=&quot;line-numbers&quot;&gt;&lt;strong&gt;&lt;a href=&quot;#n50&quot; name=&quot;n50&quot;&gt;50&lt;/a&gt;&lt;/strong&gt;&lt;/span&gt;├── packages
&lt;span class=&quot;line-numbers&quot;&gt;&lt;a href=&quot;#n51&quot; name=&quot;n51&quot;&gt;51&lt;/a&gt;&lt;/span&gt;│   └── experimental
&lt;span class=&quot;line-numbers&quot;&gt;&lt;a href=&quot;#n52&quot; name=&quot;n52&quot;&gt;52&lt;/a&gt;&lt;/span&gt;│       └── FP_TEST
&lt;span class=&quot;line-numbers&quot;&gt;&lt;a href=&quot;#n53&quot; name=&quot;n53&quot;&gt;53&lt;/a&gt;&lt;/span&gt;│           └── src
&lt;span class=&quot;line-numbers&quot;&gt;&lt;a href=&quot;#n54&quot; name=&quot;n54&quot;&gt;54&lt;/a&gt;&lt;/span&gt;│               └── com
&lt;span class=&quot;line-numbers&quot;&gt;&lt;a href=&quot;#n55&quot; name=&quot;n55&quot;&gt;55&lt;/a&gt;&lt;/span&gt;│                   └── example
&lt;span class=&quot;line-numbers&quot;&gt;&lt;a href=&quot;#n56&quot; name=&quot;n56&quot;&gt;56&lt;/a&gt;&lt;/span&gt;│                       └── fp_test
&lt;span class=&quot;line-numbers&quot;&gt;&lt;a href=&quot;#n57&quot; name=&quot;n57&quot;&gt;57&lt;/a&gt;&lt;/span&gt;│                           └── MainActivity.java APP层测试程序
&lt;span class=&quot;line-numbers&quot;&gt;&lt;a href=&quot;#n58&quot; name=&quot;n58&quot;&gt;58&lt;/a&gt;&lt;/span&gt;├── README.md
&lt;span class=&quot;line-numbers&quot;&gt;&lt;a href=&quot;#n59&quot; name=&quot;n59&quot;&gt;59&lt;/a&gt;&lt;/span&gt;├── system
&lt;span class=&quot;line-numbers&quot;&gt;&lt;strong&gt;&lt;a href=&quot;#n60&quot; name=&quot;n60&quot;&gt;60&lt;/a&gt;&lt;/strong&gt;&lt;/span&gt;│   └── core
&lt;span class=&quot;line-numbers&quot;&gt;&lt;a href=&quot;#n61&quot; name=&quot;n61&quot;&gt;61&lt;/a&gt;&lt;/span&gt;│       └── rootdir
&lt;span class=&quot;line-numbers&quot;&gt;&lt;a href=&quot;#n62&quot; name=&quot;n62&quot;&gt;62&lt;/a&gt;&lt;/span&gt;│           └── ueventd.rc 开启串口ttyS1对普通用户的读写权限
&lt;span class=&quot;line-numbers&quot;&gt;&lt;a href=&quot;#n63&quot; name=&quot;n63&quot;&gt;63&lt;/a&gt;&lt;/span&gt;└── testDev
&lt;span class=&quot;line-numbers&quot;&gt;&lt;a href=&quot;#n64&quot; name=&quot;n64&quot;&gt;64&lt;/a&gt;&lt;/span&gt;    ├── Android.mk
&lt;span class=&quot;line-numbers&quot;&gt;&lt;a href=&quot;#n65&quot; name=&quot;n65&quot;&gt;65&lt;/a&gt;&lt;/span&gt;    └── testDev.c
&lt;span class=&quot;line-numbers&quot;&gt;&lt;a href=&quot;#n66&quot; name=&quot;n66&quot;&gt;66&lt;/a&gt;&lt;/span&gt;
&lt;span class=&quot;line-numbers&quot;&gt;&lt;a href=&quot;#n67&quot; name=&quot;n67&quot;&gt;67&lt;/a&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;h3&gt;Adnroid书籍&lt;/h3&gt;

&lt;ol&gt;
  &lt;li&gt;《Embedded Android》讲android内部机制比较详细，必读&lt;/li&gt;
  &lt;li&gt;《Android内核揭秘》&lt;/li&gt;
&lt;/ol&gt;
</description>
        <pubDate>Tue, 02 Feb 2016 19:21:25 +0800</pubDate>
        <link>/2016/02/02/Embedded-Android/</link>
        <guid isPermaLink="true">/2016/02/02/Embedded-Android/</guid>
        
        <category>c++</category>
        
        <category>boost</category>
        
        
        <category>cpp</category>
        
      </item>
    
      <item>
        <title>2016年01月书单</title>
        <description>&lt;h3&gt;统计思维：程序员数学之概率统计&lt;/h3&gt;

&lt;p&gt;重点介绍如何用统计学方法分析大型数据集，介绍如何使用计算机实现各种统计方法,这有诸多优点&lt;/p&gt;

&lt;h3&gt;机器视觉算法和应用&lt;/h3&gt;

&lt;p&gt;机器视觉算法-数据结构&lt;/p&gt;

&lt;p&gt;高斯滤波：高斯滤波是一种线性平滑滤波，适用于消除高斯噪声，广泛应用于图像处理的减噪过程。通俗的讲，高斯滤波就是对整幅图像进行加权平均的过程，每一个像素点的值，都由其本身和邻域内的其他像素值经过加权平均后得到。高斯滤波的具体操作是：用一个模板（或称卷积、掩模）扫描图像中的每一个像素，用模板确定的邻域内像素的加权平均灰度值去替代模板中心像素点的值。在图像处理中，高斯滤波一般有两种实现方式，一是用离散化窗口滑窗卷积，另一种通过傅里叶变换。最常见的就是第一种滑窗实现，只有当离散化的窗口非常大，用滑窗计算量非常大（即使用可分离滤波器的实现）的情况下，可能会考虑基于傅里叶变化的实现方法。&lt;/p&gt;
</description>
        <pubDate>Mon, 18 Jan 2016 01:27:00 +0800</pubDate>
        <link>/2016/01/18/books/</link>
        <guid isPermaLink="true">/2016/01/18/books/</guid>
        
        <category>books</category>
        
        
        <category>booklist</category>
        
      </item>
    
      <item>
        <title>[Python] 一个抓取985/211大学院系里教师信息的爬虫小框架</title>
        <description>&lt;h3&gt;简介&lt;/h3&gt;

&lt;p&gt;目标是尽可能自动抓取目标大学、所需院系的在职教师名单和详细信息（主要是联系方式，简历等），结果生成格式化csv文件，包含内容包括姓名、英文名、职称、邮件、电话、部门、个人网站、电话、研究方向等。最大的问题在于各大学校院系的网站千奇百怪，格式不尽相同，工作量大。&lt;/p&gt;

&lt;p&gt;思路：爬虫+解析器+存取器&lt;/p&gt;

&lt;h3&gt;依赖&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;python 2.7.10
beautifulsoup4==4.4.1
lxml==3.4.4（remove）
requests==2.8.1
Ghost.py-0.2.3
python-imaging
pytesseract
tesseract-ocr（图像识别）
wand(imageMagic的绑定)
&lt;/code&gt;&lt;/pre&gt;

&lt;h3&gt;其他库&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;ImageMagic
media-libs/leptonica
app-text/tesseract-3.04.00-r2::gentoo（需要自行下载源码编译training工具）
&lt;/code&gt;&lt;/pre&gt;

&lt;h3&gt;OCR训练工具&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;jTessBoxEditor
&lt;/code&gt;&lt;/pre&gt;

&lt;h3&gt;基本使用&lt;/h3&gt;

&lt;p&gt;我只是写了一个简单的架子，功能：&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;解析hao123的211/985名单&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;数据 《=》csv/json相互转化&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;按照用户选择解析各个学校、学院的在职员工数据（模糊匹配职称、电子邮件、电话等等基本信息），并抓取简历保存在学院目录。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;按照设置规则文件抓取目标内容,规则内容如下：&lt;/p&gt;

    &lt;p&gt;&lt;code&gt;
     # 目标所在的区域的tag和attrs（属性）
     self.zone_tag = &#39;&#39;
     self.zone_attr = {}
     # 要抓取的目标标签tag
     self.tag_name = tag_name or &#39;&#39;
     # 要抓取的目标标签的递归父亲tag列表
     # &amp;lt;span&amp;gt;&amp;lt;p&amp;gt;
     #   &amp;lt;a&amp;gt;something&amp;lt;/a&amp;gt;
     #  &amp;lt;/p&amp;gt;&amp;lt;/span&amp;gt;
     # 如&amp;lt;a&amp;gt; tag的父亲列表为[&quot;p&quot;,&quot;span&quot;]
     self.parents = []    
     # 1. 目标节点属性
     # {
     #   &#39;class&#39;:true, true或者false表示是否含有此标签
     #   &#39;width&#39;:&#39;21%&#39;，标签为具体值则表示仅当标签=值时抓取
     #   &#39;class&#39;:[&#39;class1&#39;,&#39;class2&#39;], 标签为列表时表示仅当标签值为列表中的值才成立。暂未用到
     # }
     self.attrs = {}
     # 2. 结果筛选，暂未用到
     self.select = []
&lt;/code&gt;&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;一般来说，找到合适的zone、目标的tag、属性就能找到要找的内容。&lt;/p&gt;

&lt;p&gt;解析员工数据时，先编辑对应&lt;strong&gt;学校&lt;/strong&gt;下面的json文件，在目标&lt;strong&gt;学院&lt;/strong&gt;的json结构里添加抓取规则。然后在&lt;strong&gt;学院&lt;/strong&gt;目录下定义MyHandler.py文件，写合适的解析脚本进行解析即可得到想要的数据。&lt;/p&gt;

&lt;p&gt;由于每个学院的解析模式各不相同，所以需要在每个学院目录下自己实现两个方法：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;handler：将找到的目标转化为员工数据实体&lt;/li&gt;
  &lt;li&gt;profile_handler：保存简历正文到文件，模糊匹配员工数据并返回&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;json中的主要数据结构如下所示：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&quot;__classname__&quot;: &quot;Academy&quot;,     表示数据的类型，自动写好的
&quot;__module__&quot;: &quot;models&quot;,         表示类的模块，自动写好的
&quot;departments&quot;: {                [*] 找到一个学院的所有教师名单的索引页面，并填写进去,这个页面将用来解析employee（在职员工）
                                格式为名字：网址
    &quot;全职教员&quot;:&quot;http://www.math.pku.edu.cn/static/quanzhijiaoyuan.html&quot;
},
departmentsRule结构暂时不用管，没用到
&quot;departmentsRule&quot;: {
    &quot;__classname__&quot;: &quot;ParseRule&quot;, 
    &quot;__module__&quot;: &quot;models&quot;, 
    &quot;attrs&quot;: {}, 
    &quot;parents&quot;: [], 
    &quot;select&quot;: [], 
    &quot;tag_name&quot;: &quot;&quot;, 
    &quot;zone_attr&quot;: {}, 
    &quot;zone_tag&quot;: &quot;&quot;
}, 
&quot;departmentsUrl&quot;: &quot;&quot;,           没用到
&quot;done&quot;: false,                  没用到
&quot;employees&quot;: [],                没用到，自动生成，不用管
&quot;eng_name&quot;: &quot;www.math.pku.edu.cn&quot;, 自动解析生成学院的英文名字，不用管
&quot;hasDepartments&quot;: false,            不用管
&quot;name&quot;: &quot;数学科学学院&quot;,               自动解析生成，不用管
&quot;parser&quot;: null, 
&quot;rule&quot;: {                       [*]Rule是你的重点，这是一个规则配置文件
    &quot;__classname__&quot;: &quot;ParseRule&quot;, 表示数据的类型，自动写好的
    &quot;__module__&quot;: &quot;models&quot;,       表示类的模块，自动写好的  
    &quot;attrs&quot;: {},                  目标tag_name的属性，类似zone_attr
    &quot;parents&quot;: [],              [*]这个也是重点，目标的父标签，用于缩小解析范围的
    &quot;select&quot;: [],                忽略永不到                              
    &quot;tag_name&quot;: &quot;a&quot;,            [*]目标tag，这个也是重点    
    &quot;zone_attr&quot;: {&quot;id&quot;:&quot;main&quot;}, [*]目标tag的属性，这个也是重点，如&amp;lt;a class=&quot;link&quot;&amp;gt;中的class属性为link，所以规则为{&quot;class&quot;:&quot;link&quot;}
    &quot;zone_tag&quot;: &quot;div&quot;           [*]目标区域tag，这个也是重点，（标签，如&amp;lt;table&amp;gt;，&amp;lt;html&amp;gt;，&amp;lt;p&amp;gt;都是标签），zone用于缩小网站目标范围，过滤冗余信息
},

&quot;sname&quot;: &quot;math&quot;,                  学院简称
&quot;url&quot;: &quot;http://www.math.pku.edu.cn/&quot;,    学院主页，自动解析出来的
&quot;web_engine&quot;: &quot;urllib2&quot;             一般用urllib2,对于特定的js网站，需要用selen
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;####菜单&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;menu0 = &#39;&#39;&#39;
q. 退出
p. 打印所有大学名单
1. 抓取211名单到json文件
2. 从json文件导入211名单
3. 构建输出目录
4. 测试抓取院系导航目录
5. 自动猜测并分析出学校的院系导航链接
6. 抓取院系的名称和主页
&lt;/code&gt;&lt;/pre&gt;

&lt;ol&gt;
  &lt;li&gt;out目录下如果存在&lt;code&gt;china211.json&lt;/code&gt;则将其大学目录数据导入。如果不存在，可运行&lt;code&gt;python run.py&lt;/code&gt;选择菜单1从hao123抓取。&lt;/li&gt;
  &lt;li&gt;编辑&lt;code&gt;china985.json&lt;/code&gt;，删除不感兴趣的大学。如仅保留985+理工。&lt;/li&gt;
  &lt;li&gt;运行&lt;/li&gt;
&lt;/ol&gt;

&lt;pre&gt;&lt;code&gt;    $ python run.py
    选择6菜单
    选择学校
    选择院系
    开始解析
&lt;/code&gt;&lt;/pre&gt;

&lt;h3&gt;数据结构&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;China211
collges + rule
academies
Department
employees
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;####Parser&lt;/p&gt;

&lt;p&gt;Parser主要有两种，一种是SimpleAParser对于简单的链接+简历url正文的教师队伍介绍页面进行解析。一种是SimpleTableParser对表格式的教师队伍介绍页面进行解析。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;l_parsers = {
    &quot;Parser&quot;: Parser,
    &quot;Hao123_211_Parser&quot;: Hao123_211_Parser,
    &quot;SimpleAParser&quot;: SimpleAParser,
    &quot;AutoAcademyParser&quot;: AutoAcademyParser,
    &quot;SimpleTableParser&quot;:SimpleTableParser
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;####Models&lt;/p&gt;

&lt;p&gt;Models模块包含了相关数据的结构，如College，Academy，Employee类结构，同时提供obj2json和json2obj等串行化/实例化接口。&lt;/p&gt;

&lt;p&gt;###浏览器和javascript支持&lt;/p&gt;

&lt;p&gt;对于一些比较变态的主页（主要是javascript数据），使用selenium调用firefox获取数据&lt;/p&gt;

&lt;h3&gt;反爬虫问题&lt;/h3&gt;

&lt;p&gt;遇到过比较棘手的将邮件等信息用图片方式进行展示的情况，没办法，只能用的OCR方式进行图像文字识别，可能还需要自己训练数据。&lt;/p&gt;

&lt;h3&gt;其他&lt;/h3&gt;

&lt;ol&gt;
  &lt;li&gt;JSon”陷阱”  &lt;br /&gt;
 对于自定义类的json化，需要注意成员必须事先定义好。否则在dump时会出现&lt;code&gt;循环解析&lt;/code&gt;的问题。&lt;/li&gt;
  &lt;li&gt;BeautifulSoup解析器  &lt;br /&gt;
 社区推荐优先使用lxml，主要是速度较快。但是使用时发现有时解析不到目标，改为python自带的”html-parser”。后期将分析原因，或者向社区提交bug&lt;/li&gt;
  &lt;li&gt;中英文名转换&lt;br /&gt;
 主要是中文转英文名，使用了pypinyin库&lt;/li&gt;
&lt;/ol&gt;

&lt;h3&gt;源代码&lt;/h3&gt;

&lt;p&gt;github地址：https://github.com/yixiaoyang/EduParser/&lt;/p&gt;
</description>
        <pubDate>Wed, 06 Jan 2016 16:29:20 +0800</pubDate>
        <link>/2016/01/06/eduparser/</link>
        <guid isPermaLink="true">/2016/01/06/eduparser/</guid>
        
        <category>Python</category>
        
        
        <category>python</category>
        
      </item>
    
      <item>
        <title>Gentoo seven steps to upgrade</title>
        <description>&lt;p&gt;There is no a full HOWTO introducing whole system upgrading. I hope this simple document can help someone else.&lt;/p&gt;

&lt;p&gt;src: https://forums.gentoo.org/viewtopic-t-807345.html&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;sync portage tree(eix-sync is recommended)&lt;/li&gt;
&lt;/ol&gt;

&lt;pre&gt;&lt;code&gt;# eix-sync  
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;or&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# emerge --sync
&lt;/code&gt;&lt;/pre&gt;

&lt;ol&gt;
  &lt;li&gt;upgrade whole system&lt;/li&gt;
&lt;/ol&gt;

&lt;pre&gt;&lt;code&gt;# emerge -avuDN --with-bdeps y --keep-going world   
&lt;/code&gt;&lt;/pre&gt;

&lt;ol&gt;
  &lt;li&gt;make configuration file(s) up to date&lt;/li&gt;
&lt;/ol&gt;

&lt;pre&gt;&lt;code&gt;# etc-update    
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;or&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# dispatch-conf 
&lt;/code&gt;&lt;/pre&gt;

&lt;ol&gt;
  &lt;li&gt;fix static library&lt;/li&gt;
&lt;/ol&gt;

&lt;pre&gt;&lt;code&gt;# lafilefixer --justfixit | grep -v skipping
&lt;/code&gt;&lt;/pre&gt;

&lt;ol&gt;
  &lt;li&gt;uninstall useless packages&lt;/li&gt;
&lt;/ol&gt;

&lt;pre&gt;&lt;code&gt;# emerge -av --depclean 
&lt;/code&gt;&lt;/pre&gt;

&lt;ol&gt;
  &lt;li&gt;Reverse dynamic library Dependency&lt;/li&gt;
&lt;/ol&gt;

&lt;pre&gt;&lt;code&gt;# revdep-rebuild
&lt;/code&gt;&lt;/pre&gt;

&lt;ol&gt;
  &lt;li&gt;clean source code of the old packages&lt;/li&gt;
&lt;/ol&gt;

&lt;pre&gt;&lt;code&gt;# eclean -d distfiles
&lt;/code&gt;&lt;/pre&gt;
</description>
        <pubDate>Fri, 25 Dec 2015 16:29:20 +0800</pubDate>
        <link>/2015/12/25/Gentoo-seven-steps-to-upgrade/</link>
        <guid isPermaLink="true">/2015/12/25/Gentoo-seven-steps-to-upgrade/</guid>
        
        <category>shell</category>
        
        <category>gentoo</category>
        
        
        <category>shell</category>
        
      </item>
    
      <item>
        <title>[工具] Linux上的常用‘冷门’工具</title>
        <description>&lt;h3&gt;Shell类&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;zsh, oh_my_zsh&lt;/li&gt;
  &lt;li&gt;htop, atop &amp;amp; glances: 更好的top工具&lt;/li&gt;
  &lt;li&gt;screen, dtach, tmux, byobu： Keep your terminal sessions alive.&lt;/li&gt;
  &lt;li&gt;curl：大名鼎鼎curl&lt;/li&gt;
  &lt;li&gt;ack, ag (silver searcher), pt：更好的代码查找工具，grep&lt;/li&gt;
  &lt;li&gt;calcurse &amp;amp; remind + wyrd：比较实用，终端日历+todo&lt;/li&gt;
  &lt;li&gt;qalc：The best calculator. Ever. (For scripts too.)&lt;/li&gt;
  &lt;li&gt;终端：Tilda &amp;amp; Yakuake（F12的那个酸爽） &amp;amp; Terminator&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;类Shell&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;vim：nonono，我在说exVim，http://exvim.github.io/&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;Gentoo&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;eix:比emerge简洁&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;sublime_text&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;Emmet:前端必备，DSL实现&lt;/li&gt;
  &lt;li&gt;PlainTasks:配合insert date，每天先想做啥&lt;br /&gt;
&lt;img src=&quot;https://camo.githubusercontent.com/95bbc6d99f00ff199af7daae7d5c65556784f84b/687474703a2f2f636c2e6c792f696d6167652f3171313030513231326f32512f73732e706e67&quot; alt=&quot;图&quot; /&gt;&lt;/li&gt;
  &lt;li&gt;Predawn主题，Seti,Primer,Material&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;layman&lt;/h3&gt;

&lt;div class=&quot;highlighter-coderay&quot;&gt;&lt;div class=&quot;CodeRay&quot;&gt;
  &lt;div class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line-numbers&quot;&gt;&lt;a href=&quot;#n1&quot; name=&quot;n1&quot;&gt;1&lt;/a&gt;&lt;/span&gt;% sudo layman -o http://aegypius.github.io/overlay/repositories.xml -f -a aegypius
&lt;span class=&quot;line-numbers&quot;&gt;&lt;a href=&quot;#n2&quot; name=&quot;n2&quot;&gt;2&lt;/a&gt;&lt;/span&gt;% ls /var/lib/layman 
&lt;span class=&quot;line-numbers&quot;&gt;&lt;a href=&quot;#n3&quot; name=&quot;n3&quot;&gt;3&lt;/a&gt;&lt;/span&gt;aegypius  haskell  qt gentoo-zh  python
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
</description>
        <pubDate>Wed, 11 Nov 2015 19:11:20 +0800</pubDate>
        <link>/2015/11/11/linux-shell-tools/</link>
        <guid isPermaLink="true">/2015/11/11/linux-shell-tools/</guid>
        
        <category>Shell</category>
        
        <category>工具</category>
        
        
        <category>工具</category>
        
      </item>
    
      <item>
        <title>2015年10月书单</title>
        <description>&lt;p&gt;###Machine Learning in Action/机器学习实战&lt;/p&gt;

&lt;p&gt;机器学习随着大数据搬上台面，本质上和机器、自动化之类的无关，是数据分析的范畴。&lt;/p&gt;

&lt;p&gt;作为一个非算法工程师，了解机器学习可以培养基本的“数据素养”。数据素养有一个过程：&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;关心收据&lt;/li&gt;
  &lt;li&gt;清洗数据&lt;/li&gt;
  &lt;li&gt;分析数据和数据之间的联系&lt;/li&gt;
  &lt;li&gt;数据到现实的转换&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;本书涵盖机器学习概念的相关分析模型、算法和工具，既然是in action，想必可操作性不错。还没看完，先挖坑。&lt;/p&gt;

&lt;p&gt;###Embedded Android&lt;/p&gt;

&lt;p&gt;by Karim Yaghmour&lt;/p&gt;

&lt;p&gt;一本从方方面面介绍Android的书籍，面向嵌入式工程师，提供从底层驱动、中间层HAL、服务层和组件层到APP层的深度纵向解析，可以作为从Linux原生转Android开发的读必会入门书。&lt;/p&gt;
</description>
        <pubDate>Wed, 21 Oct 2015 20:10:05 +0800</pubDate>
        <link>/2015/10/21/books/</link>
        <guid isPermaLink="true">/2015/10/21/books/</guid>
        
        <category>books</category>
        
        
        <category>booklist</category>
        
      </item>
    
      <item>
        <title>2015年9月书单</title>
        <description>&lt;p&gt;###Ruby文档-Web安全&lt;/p&gt;

&lt;p&gt;http://guides.rubyonrails.org/security.html&lt;/p&gt;

</description>
        <pubDate>Mon, 28 Sep 2015 20:10:05 +0800</pubDate>
        <link>/2015/09/28/books/</link>
        <guid isPermaLink="true">/2015/09/28/books/</guid>
        
        <category>books</category>
        
        
        <category>booklist</category>
        
      </item>
    
      <item>
        <title>[leetcode] Leetcode(5)-Manacher算法解决最大回文串问题</title>
        <description>&lt;p&gt;在leetcode上算法题目第5号题目会遇到最大回文串问题，暴力计算复杂度高达O(n^2)不可取，可使用经典的Manacher算法解决。&lt;/p&gt;

&lt;h3&gt;问题&lt;/h3&gt;

&lt;p&gt;输入字符串S，求S包含的最长回文串&lt;/p&gt;

&lt;h3&gt;预处理&lt;/h3&gt;

&lt;p&gt;Manacher用一个巧妙的方式，将所有可能的奇数/偶数长度的回文子串都转换成了奇数长度：在每个字符的两边都插入一个特殊的符号。如 &lt;code&gt;xxyy&lt;/code&gt; =&amp;gt; &lt;code&gt;#x#x#y#y#&lt;/code&gt;,&lt;code&gt;yxy&lt;/code&gt; =&amp;gt; &lt;code&gt;#y#x#y#&lt;/code&gt;&lt;/p&gt;

&lt;h3&gt;记录数组&lt;/h3&gt;

&lt;p&gt;记录数组P[]用以记录以当前S[i]为中心的回文串向左/右方向上的最大扩展长度。比如S和P的对应关系：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;S # 1 # 2 # 2 # 1 # 2 # 3 # 2 # 1 #
P 0 1 0 1 4 1 0 3 0 1 0 5 0 1 0 1 0
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;这里有一个重要的特性：&lt;code&gt;P[i]正好是原字符串S中回文串的总长度&lt;/code&gt;，因此利用这个特性，计算完P[]就可以得知最大的回文串。&lt;/p&gt;

&lt;h3&gt;记录数组计算过程的优化&lt;/h3&gt;

&lt;p&gt;主要思想是：利用回文串的对称性，&lt;code&gt;计算中心点右边子回文串时可以利用左边对称位置已经计算出的值&lt;/code&gt;。&lt;/p&gt;

&lt;p&gt;先增加两个辅助变量id和mx，其中id表示最大回文子串中心的位置，mx则为id+P[id]，也就是最大回文子串的边界。j=2*id-i，即j是i关于id的对称点， 那么会出现一下两种情况：&lt;/p&gt;

&lt;p&gt;(1) 以j为中心的回文串没有超过mx的边界，此时P[i]=P[j]&lt;/p&gt;

&lt;p&gt;(2) 以j为中心的回文串超过mx的边界，此时[i,mx]范围内的串已经比较过了属于P[i]回文串的一部分，可以直接从max开始接着计算P[i]超出mx的那部分回文串。&lt;br /&gt;
经过上面两步处理，用id、mx配合，可以在每次循环中直接对P[i]的快速赋值，从而在计算以i为中心的回文子串的过程中，不必每次都从1开始比较，减少了比较次数，最终使得求解最长回文子串的长度达到线性O(N)的时间复杂度。&lt;/p&gt;

&lt;h3&gt;实现&lt;/h3&gt;

&lt;p&gt;我的提交代码：&lt;/p&gt;

&lt;div class=&quot;highlighter-coderay&quot;&gt;&lt;div class=&quot;CodeRay&quot;&gt;
  &lt;div class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line-numbers&quot;&gt;  &lt;a href=&quot;#n1&quot; name=&quot;n1&quot;&gt;1&lt;/a&gt;&lt;/span&gt;&lt;span style=&quot;color:#579&quot;&gt;#include&lt;/span&gt; &lt;span style=&quot;color:#B44;font-weight:bold&quot;&gt;&amp;lt;string&amp;gt;&lt;/span&gt;
&lt;span class=&quot;line-numbers&quot;&gt;  &lt;a href=&quot;#n2&quot; name=&quot;n2&quot;&gt;2&lt;/a&gt;&lt;/span&gt;&lt;span style=&quot;color:#579&quot;&gt;#include&lt;/span&gt; &lt;span style=&quot;color:#B44;font-weight:bold&quot;&gt;&amp;lt;iterator&amp;gt;&lt;/span&gt;
&lt;span class=&quot;line-numbers&quot;&gt;  &lt;a href=&quot;#n3&quot; name=&quot;n3&quot;&gt;3&lt;/a&gt;&lt;/span&gt;&lt;span style=&quot;color:#579&quot;&gt;#include&lt;/span&gt; &lt;span style=&quot;color:#B44;font-weight:bold&quot;&gt;&amp;lt;iostream&amp;gt;&lt;/span&gt;
&lt;span class=&quot;line-numbers&quot;&gt;  &lt;a href=&quot;#n4&quot; name=&quot;n4&quot;&gt;4&lt;/a&gt;&lt;/span&gt;&lt;span style=&quot;color:#579&quot;&gt;#include&lt;/span&gt; &lt;span style=&quot;color:#B44;font-weight:bold&quot;&gt;&amp;lt;vector&amp;gt;&lt;/span&gt;
&lt;span class=&quot;line-numbers&quot;&gt;  &lt;a href=&quot;#n5&quot; name=&quot;n5&quot;&gt;5&lt;/a&gt;&lt;/span&gt;
&lt;span class=&quot;line-numbers&quot;&gt;  &lt;a href=&quot;#n6&quot; name=&quot;n6&quot;&gt;6&lt;/a&gt;&lt;/span&gt;&lt;span style=&quot;color:#088;font-weight:bold&quot;&gt;using&lt;/span&gt; &lt;span style=&quot;color:#080;font-weight:bold&quot;&gt;namespace&lt;/span&gt; std;
&lt;span class=&quot;line-numbers&quot;&gt;  &lt;a href=&quot;#n7&quot; name=&quot;n7&quot;&gt;7&lt;/a&gt;&lt;/span&gt;
&lt;span class=&quot;line-numbers&quot;&gt;  &lt;a href=&quot;#n8&quot; name=&quot;n8&quot;&gt;8&lt;/a&gt;&lt;/span&gt;&lt;span style=&quot;color:#080;font-weight:bold&quot;&gt;class&lt;/span&gt; &lt;span style=&quot;color:#B06;font-weight:bold&quot;&gt;LongestPalindromeSolution&lt;/span&gt; {
&lt;span class=&quot;line-numbers&quot;&gt;  &lt;a href=&quot;#n9&quot; name=&quot;n9&quot;&gt;9&lt;/a&gt;&lt;/span&gt;&lt;span style=&quot;color:#088;font-weight:bold&quot;&gt;public&lt;/span&gt;:
&lt;span class=&quot;line-numbers&quot;&gt; &lt;strong&gt;&lt;a href=&quot;#n10&quot; name=&quot;n10&quot;&gt;10&lt;/a&gt;&lt;/strong&gt;&lt;/span&gt;    &lt;span style=&quot;color:#0a8;font-weight:bold&quot;&gt;string&lt;/span&gt; longestPalindrome(&lt;span style=&quot;color:#0a8;font-weight:bold&quot;&gt;string&lt;/span&gt; sStr){
&lt;span class=&quot;line-numbers&quot;&gt; &lt;a href=&quot;#n11&quot; name=&quot;n11&quot;&gt;11&lt;/a&gt;&lt;/span&gt;        &lt;span style=&quot;color:#0a8;font-weight:bold&quot;&gt;string&lt;/span&gt; pStr(&lt;span style=&quot;background-color:hsla(0,100%,50%,0.05)&quot;&gt;&lt;span style=&quot;color:#710&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span style=&quot;color:#D20&quot;&gt;#&lt;/span&gt;&lt;span style=&quot;color:#710&quot;&gt;&amp;quot;&lt;/span&gt;&lt;/span&gt;);
&lt;span class=&quot;line-numbers&quot;&gt; &lt;a href=&quot;#n12&quot; name=&quot;n12&quot;&gt;12&lt;/a&gt;&lt;/span&gt;        &lt;span style=&quot;color:#0a8;font-weight:bold&quot;&gt;string&lt;/span&gt; res;
&lt;span class=&quot;line-numbers&quot;&gt; &lt;a href=&quot;#n13&quot; name=&quot;n13&quot;&gt;13&lt;/a&gt;&lt;/span&gt;        &lt;span style=&quot;color:#0a8;font-weight:bold&quot;&gt;int&lt;/span&gt; pLen = convert(sStr,pStr);
&lt;span class=&quot;line-numbers&quot;&gt; &lt;a href=&quot;#n14&quot; name=&quot;n14&quot;&gt;14&lt;/a&gt;&lt;/span&gt;        vector&amp;lt;&lt;span style=&quot;color:#0a8;font-weight:bold&quot;&gt;int&lt;/span&gt;&amp;gt; table(pLen);
&lt;span class=&quot;line-numbers&quot;&gt; &lt;a href=&quot;#n15&quot; name=&quot;n15&quot;&gt;15&lt;/a&gt;&lt;/span&gt;
&lt;span class=&quot;line-numbers&quot;&gt; &lt;a href=&quot;#n16&quot; name=&quot;n16&quot;&gt;16&lt;/a&gt;&lt;/span&gt;        &lt;span style=&quot;color:#0a8;font-weight:bold&quot;&gt;int&lt;/span&gt; center = &lt;span style=&quot;color:#00D&quot;&gt;2&lt;/span&gt;;
&lt;span class=&quot;line-numbers&quot;&gt; &lt;a href=&quot;#n17&quot; name=&quot;n17&quot;&gt;17&lt;/a&gt;&lt;/span&gt;        &lt;span style=&quot;color:#0a8;font-weight:bold&quot;&gt;int&lt;/span&gt; scopeL;
&lt;span class=&quot;line-numbers&quot;&gt; &lt;a href=&quot;#n18&quot; name=&quot;n18&quot;&gt;18&lt;/a&gt;&lt;/span&gt;        &lt;span style=&quot;color:#0a8;font-weight:bold&quot;&gt;int&lt;/span&gt; scopeR;
&lt;span class=&quot;line-numbers&quot;&gt; &lt;a href=&quot;#n19&quot; name=&quot;n19&quot;&gt;19&lt;/a&gt;&lt;/span&gt;        &lt;span style=&quot;color:#0a8;font-weight:bold&quot;&gt;int&lt;/span&gt; offset = &lt;span style=&quot;color:#00D&quot;&gt;1&lt;/span&gt;;
&lt;span class=&quot;line-numbers&quot;&gt; &lt;strong&gt;&lt;a href=&quot;#n20&quot; name=&quot;n20&quot;&gt;20&lt;/a&gt;&lt;/strong&gt;&lt;/span&gt;
&lt;span class=&quot;line-numbers&quot;&gt; &lt;a href=&quot;#n21&quot; name=&quot;n21&quot;&gt;21&lt;/a&gt;&lt;/span&gt;        &lt;span style=&quot;color:#0a8;font-weight:bold&quot;&gt;int&lt;/span&gt; tmpL;
&lt;span class=&quot;line-numbers&quot;&gt; &lt;a href=&quot;#n22&quot; name=&quot;n22&quot;&gt;22&lt;/a&gt;&lt;/span&gt;        &lt;span style=&quot;color:#0a8;font-weight:bold&quot;&gt;int&lt;/span&gt; tmpR;
&lt;span class=&quot;line-numbers&quot;&gt; &lt;a href=&quot;#n23&quot; name=&quot;n23&quot;&gt;23&lt;/a&gt;&lt;/span&gt;        &lt;span style=&quot;color:#0a8;font-weight:bold&quot;&gt;int&lt;/span&gt; tmpRMax;
&lt;span class=&quot;line-numbers&quot;&gt; &lt;a href=&quot;#n24&quot; name=&quot;n24&quot;&gt;24&lt;/a&gt;&lt;/span&gt;        &lt;span style=&quot;color:#0a8;font-weight:bold&quot;&gt;int&lt;/span&gt; centerMax;
&lt;span class=&quot;line-numbers&quot;&gt; &lt;a href=&quot;#n25&quot; name=&quot;n25&quot;&gt;25&lt;/a&gt;&lt;/span&gt;
&lt;span class=&quot;line-numbers&quot;&gt; &lt;a href=&quot;#n26&quot; name=&quot;n26&quot;&gt;26&lt;/a&gt;&lt;/span&gt;        &lt;span style=&quot;color:#0a8;font-weight:bold&quot;&gt;int&lt;/span&gt; max = &lt;span style=&quot;color:#00D&quot;&gt;0&lt;/span&gt;;
&lt;span class=&quot;line-numbers&quot;&gt; &lt;a href=&quot;#n27&quot; name=&quot;n27&quot;&gt;27&lt;/a&gt;&lt;/span&gt;        &lt;span style=&quot;color:#0a8;font-weight:bold&quot;&gt;int&lt;/span&gt; maxPos = &lt;span style=&quot;color:#00D&quot;&gt;0&lt;/span&gt;;
&lt;span class=&quot;line-numbers&quot;&gt; &lt;a href=&quot;#n28&quot; name=&quot;n28&quot;&gt;28&lt;/a&gt;&lt;/span&gt;
&lt;span class=&quot;line-numbers&quot;&gt; &lt;a href=&quot;#n29&quot; name=&quot;n29&quot;&gt;29&lt;/a&gt;&lt;/span&gt;        table[&lt;span style=&quot;color:#00D&quot;&gt;0&lt;/span&gt;] = &lt;span style=&quot;color:#00D&quot;&gt;0&lt;/span&gt;;
&lt;span class=&quot;line-numbers&quot;&gt; &lt;strong&gt;&lt;a href=&quot;#n30&quot; name=&quot;n30&quot;&gt;30&lt;/a&gt;&lt;/strong&gt;&lt;/span&gt;        table[&lt;span style=&quot;color:#00D&quot;&gt;1&lt;/span&gt;] = &lt;span style=&quot;color:#00D&quot;&gt;1&lt;/span&gt;;
&lt;span class=&quot;line-numbers&quot;&gt; &lt;a href=&quot;#n31&quot; name=&quot;n31&quot;&gt;31&lt;/a&gt;&lt;/span&gt;        maxPos = &lt;span style=&quot;color:#00D&quot;&gt;1&lt;/span&gt;;
&lt;span class=&quot;line-numbers&quot;&gt; &lt;a href=&quot;#n32&quot; name=&quot;n32&quot;&gt;32&lt;/a&gt;&lt;/span&gt;        max = &lt;span style=&quot;color:#00D&quot;&gt;1&lt;/span&gt;;
&lt;span class=&quot;line-numbers&quot;&gt; &lt;a href=&quot;#n33&quot; name=&quot;n33&quot;&gt;33&lt;/a&gt;&lt;/span&gt;
&lt;span class=&quot;line-numbers&quot;&gt; &lt;a href=&quot;#n34&quot; name=&quot;n34&quot;&gt;34&lt;/a&gt;&lt;/span&gt;        &lt;span style=&quot;color:#080;font-weight:bold&quot;&gt;while&lt;/span&gt;(center &amp;lt; pLen){
&lt;span class=&quot;line-numbers&quot;&gt; &lt;a href=&quot;#n35&quot; name=&quot;n35&quot;&gt;35&lt;/a&gt;&lt;/span&gt;            scopeL = center -offset;
&lt;span class=&quot;line-numbers&quot;&gt; &lt;a href=&quot;#n36&quot; name=&quot;n36&quot;&gt;36&lt;/a&gt;&lt;/span&gt;            scopeR = center +offset;
&lt;span class=&quot;line-numbers&quot;&gt; &lt;a href=&quot;#n37&quot; name=&quot;n37&quot;&gt;37&lt;/a&gt;&lt;/span&gt;
&lt;span class=&quot;line-numbers&quot;&gt; &lt;a href=&quot;#n38&quot; name=&quot;n38&quot;&gt;38&lt;/a&gt;&lt;/span&gt;            &lt;span style=&quot;color:#777&quot;&gt;// pidx&lt;/span&gt;
&lt;span class=&quot;line-numbers&quot;&gt; &lt;a href=&quot;#n39&quot; name=&quot;n39&quot;&gt;39&lt;/a&gt;&lt;/span&gt;            &lt;span style=&quot;color:#080;font-weight:bold&quot;&gt;while&lt;/span&gt;(scopeL &amp;gt;= &lt;span style=&quot;color:#00D&quot;&gt;0&lt;/span&gt; &amp;amp;&amp;amp; scopeR &amp;lt; pLen){
&lt;span class=&quot;line-numbers&quot;&gt; &lt;strong&gt;&lt;a href=&quot;#n40&quot; name=&quot;n40&quot;&gt;40&lt;/a&gt;&lt;/strong&gt;&lt;/span&gt;                &lt;span style=&quot;color:#080;font-weight:bold&quot;&gt;if&lt;/span&gt;(pStr.at(scopeL) == pStr.at(scopeR)){
&lt;span class=&quot;line-numbers&quot;&gt; &lt;a href=&quot;#n41&quot; name=&quot;n41&quot;&gt;41&lt;/a&gt;&lt;/span&gt;                    scopeL--;
&lt;span class=&quot;line-numbers&quot;&gt; &lt;a href=&quot;#n42&quot; name=&quot;n42&quot;&gt;42&lt;/a&gt;&lt;/span&gt;                    scopeR++;
&lt;span class=&quot;line-numbers&quot;&gt; &lt;a href=&quot;#n43&quot; name=&quot;n43&quot;&gt;43&lt;/a&gt;&lt;/span&gt;                    table[center]++;
&lt;span class=&quot;line-numbers&quot;&gt; &lt;a href=&quot;#n44&quot; name=&quot;n44&quot;&gt;44&lt;/a&gt;&lt;/span&gt;                }&lt;span style=&quot;color:#080;font-weight:bold&quot;&gt;else&lt;/span&gt;{
&lt;span class=&quot;line-numbers&quot;&gt; &lt;a href=&quot;#n45&quot; name=&quot;n45&quot;&gt;45&lt;/a&gt;&lt;/span&gt;                    &lt;span style=&quot;color:#080;font-weight:bold&quot;&gt;break&lt;/span&gt;;
&lt;span class=&quot;line-numbers&quot;&gt; &lt;a href=&quot;#n46&quot; name=&quot;n46&quot;&gt;46&lt;/a&gt;&lt;/span&gt;                }
&lt;span class=&quot;line-numbers&quot;&gt; &lt;a href=&quot;#n47&quot; name=&quot;n47&quot;&gt;47&lt;/a&gt;&lt;/span&gt;            }
&lt;span class=&quot;line-numbers&quot;&gt; &lt;a href=&quot;#n48&quot; name=&quot;n48&quot;&gt;48&lt;/a&gt;&lt;/span&gt;
&lt;span class=&quot;line-numbers&quot;&gt; &lt;a href=&quot;#n49&quot; name=&quot;n49&quot;&gt;49&lt;/a&gt;&lt;/span&gt;            centerMax = center + table[center];
&lt;span class=&quot;line-numbers&quot;&gt; &lt;strong&gt;&lt;a href=&quot;#n50&quot; name=&quot;n50&quot;&gt;50&lt;/a&gt;&lt;/strong&gt;&lt;/span&gt;            &lt;span style=&quot;color:#080;font-weight:bold&quot;&gt;if&lt;/span&gt;( table[center] &amp;gt; max ){
&lt;span class=&quot;line-numbers&quot;&gt; &lt;a href=&quot;#n51&quot; name=&quot;n51&quot;&gt;51&lt;/a&gt;&lt;/span&gt;                maxPos = center;
&lt;span class=&quot;line-numbers&quot;&gt; &lt;a href=&quot;#n52&quot; name=&quot;n52&quot;&gt;52&lt;/a&gt;&lt;/span&gt;                max = table[center];
&lt;span class=&quot;line-numbers&quot;&gt; &lt;a href=&quot;#n53&quot; name=&quot;n53&quot;&gt;53&lt;/a&gt;&lt;/span&gt;            }
&lt;span class=&quot;line-numbers&quot;&gt; &lt;a href=&quot;#n54&quot; name=&quot;n54&quot;&gt;54&lt;/a&gt;&lt;/span&gt;
&lt;span class=&quot;line-numbers&quot;&gt; &lt;a href=&quot;#n55&quot; name=&quot;n55&quot;&gt;55&lt;/a&gt;&lt;/span&gt;            &lt;span style=&quot;color:#777&quot;&gt;// pidx+?&lt;/span&gt;
&lt;span class=&quot;line-numbers&quot;&gt; &lt;a href=&quot;#n56&quot; name=&quot;n56&quot;&gt;56&lt;/a&gt;&lt;/span&gt;            &lt;span style=&quot;color:#080;font-weight:bold&quot;&gt;for&lt;/span&gt;(tmpR = center+&lt;span style=&quot;color:#00D&quot;&gt;1&lt;/span&gt;; tmpR &amp;lt; scopeR; ){
&lt;span class=&quot;line-numbers&quot;&gt; &lt;a href=&quot;#n57&quot; name=&quot;n57&quot;&gt;57&lt;/a&gt;&lt;/span&gt;                tmpL = &lt;span style=&quot;color:#00D&quot;&gt;2&lt;/span&gt;*center-tmpR;
&lt;span class=&quot;line-numbers&quot;&gt; &lt;a href=&quot;#n58&quot; name=&quot;n58&quot;&gt;58&lt;/a&gt;&lt;/span&gt;                tmpRMax = table[tmpL] + tmpR;
&lt;span class=&quot;line-numbers&quot;&gt; &lt;a href=&quot;#n59&quot; name=&quot;n59&quot;&gt;59&lt;/a&gt;&lt;/span&gt;                &lt;span style=&quot;color:#080;font-weight:bold&quot;&gt;if&lt;/span&gt;( tmpRMax &amp;lt; centerMax ){
&lt;span class=&quot;line-numbers&quot;&gt; &lt;strong&gt;&lt;a href=&quot;#n60&quot; name=&quot;n60&quot;&gt;60&lt;/a&gt;&lt;/strong&gt;&lt;/span&gt;                    table[tmpR] = table[tmpL];
&lt;span class=&quot;line-numbers&quot;&gt; &lt;a href=&quot;#n61&quot; name=&quot;n61&quot;&gt;61&lt;/a&gt;&lt;/span&gt;                    tmpR++;
&lt;span class=&quot;line-numbers&quot;&gt; &lt;a href=&quot;#n62&quot; name=&quot;n62&quot;&gt;62&lt;/a&gt;&lt;/span&gt;                }&lt;span style=&quot;color:#080;font-weight:bold&quot;&gt;else&lt;/span&gt;{
&lt;span class=&quot;line-numbers&quot;&gt; &lt;a href=&quot;#n63&quot; name=&quot;n63&quot;&gt;63&lt;/a&gt;&lt;/span&gt;                    table[tmpR] = centerMax - tmpR;
&lt;span class=&quot;line-numbers&quot;&gt; &lt;a href=&quot;#n64&quot; name=&quot;n64&quot;&gt;64&lt;/a&gt;&lt;/span&gt;                    offset = table[tmpR]+&lt;span style=&quot;color:#00D&quot;&gt;1&lt;/span&gt;;
&lt;span class=&quot;line-numbers&quot;&gt; &lt;a href=&quot;#n65&quot; name=&quot;n65&quot;&gt;65&lt;/a&gt;&lt;/span&gt;                    &lt;span style=&quot;color:#080;font-weight:bold&quot;&gt;break&lt;/span&gt;;
&lt;span class=&quot;line-numbers&quot;&gt; &lt;a href=&quot;#n66&quot; name=&quot;n66&quot;&gt;66&lt;/a&gt;&lt;/span&gt;                }
&lt;span class=&quot;line-numbers&quot;&gt; &lt;a href=&quot;#n67&quot; name=&quot;n67&quot;&gt;67&lt;/a&gt;&lt;/span&gt;            }
&lt;span class=&quot;line-numbers&quot;&gt; &lt;a href=&quot;#n68&quot; name=&quot;n68&quot;&gt;68&lt;/a&gt;&lt;/span&gt;
&lt;span class=&quot;line-numbers&quot;&gt; &lt;a href=&quot;#n69&quot; name=&quot;n69&quot;&gt;69&lt;/a&gt;&lt;/span&gt;            &lt;span style=&quot;color:#777&quot;&gt;// reset pIdx&lt;/span&gt;
&lt;span class=&quot;line-numbers&quot;&gt; &lt;strong&gt;&lt;a href=&quot;#n70&quot; name=&quot;n70&quot;&gt;70&lt;/a&gt;&lt;/strong&gt;&lt;/span&gt;            center = tmpR;
&lt;span class=&quot;line-numbers&quot;&gt; &lt;a href=&quot;#n71&quot; name=&quot;n71&quot;&gt;71&lt;/a&gt;&lt;/span&gt;            printVector(table);
&lt;span class=&quot;line-numbers&quot;&gt; &lt;a href=&quot;#n72&quot; name=&quot;n72&quot;&gt;72&lt;/a&gt;&lt;/span&gt;        }
&lt;span class=&quot;line-numbers&quot;&gt; &lt;a href=&quot;#n73&quot; name=&quot;n73&quot;&gt;73&lt;/a&gt;&lt;/span&gt;
&lt;span class=&quot;line-numbers&quot;&gt; &lt;a href=&quot;#n74&quot; name=&quot;n74&quot;&gt;74&lt;/a&gt;&lt;/span&gt;        res = sStr.substr(((maxPos-table[maxPos])&amp;gt;&amp;gt;&lt;span style=&quot;color:#00D&quot;&gt;1&lt;/span&gt;),table[maxPos]);
&lt;span class=&quot;line-numbers&quot;&gt; &lt;a href=&quot;#n75&quot; name=&quot;n75&quot;&gt;75&lt;/a&gt;&lt;/span&gt;        cout &amp;lt;&amp;lt; maxPos &amp;lt;&amp;lt; &lt;span style=&quot;background-color:hsla(0,100%,50%,0.05)&quot;&gt;&lt;span style=&quot;color:#710&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span style=&quot;color:#D20&quot;&gt;:&lt;/span&gt;&lt;span style=&quot;color:#710&quot;&gt;&amp;quot;&lt;/span&gt;&lt;/span&gt; &amp;lt;&amp;lt; table[maxPos] &amp;lt;&amp;lt; &lt;span style=&quot;background-color:hsla(0,100%,50%,0.05)&quot;&gt;&lt;span style=&quot;color:#710&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span style=&quot;color:#D20&quot;&gt;:&lt;/span&gt;&lt;span style=&quot;color:#710&quot;&gt;&amp;quot;&lt;/span&gt;&lt;/span&gt; &amp;lt;&amp;lt; res &amp;lt;&amp;lt; endl;
&lt;span class=&quot;line-numbers&quot;&gt; &lt;a href=&quot;#n76&quot; name=&quot;n76&quot;&gt;76&lt;/a&gt;&lt;/span&gt;        &lt;span style=&quot;color:#080;font-weight:bold&quot;&gt;return&lt;/span&gt; res;
&lt;span class=&quot;line-numbers&quot;&gt; &lt;a href=&quot;#n77&quot; name=&quot;n77&quot;&gt;77&lt;/a&gt;&lt;/span&gt;    }
&lt;span class=&quot;line-numbers&quot;&gt; &lt;a href=&quot;#n78&quot; name=&quot;n78&quot;&gt;78&lt;/a&gt;&lt;/span&gt;
&lt;span class=&quot;line-numbers&quot;&gt; &lt;a href=&quot;#n79&quot; name=&quot;n79&quot;&gt;79&lt;/a&gt;&lt;/span&gt;    &lt;span style=&quot;color:#0a8;font-weight:bold&quot;&gt;int&lt;/span&gt; convert(&lt;span style=&quot;color:#0a8;font-weight:bold&quot;&gt;string&lt;/span&gt; &amp;amp;src, &lt;span style=&quot;color:#0a8;font-weight:bold&quot;&gt;string&lt;/span&gt;&amp;amp; dst){
&lt;span class=&quot;line-numbers&quot;&gt; &lt;strong&gt;&lt;a href=&quot;#n80&quot; name=&quot;n80&quot;&gt;80&lt;/a&gt;&lt;/strong&gt;&lt;/span&gt;        &lt;span style=&quot;color:#0a8;font-weight:bold&quot;&gt;int&lt;/span&gt; index;
&lt;span class=&quot;line-numbers&quot;&gt; &lt;a href=&quot;#n81&quot; name=&quot;n81&quot;&gt;81&lt;/a&gt;&lt;/span&gt;        &lt;span style=&quot;color:#0a8;font-weight:bold&quot;&gt;int&lt;/span&gt; len = src.size();
&lt;span class=&quot;line-numbers&quot;&gt; &lt;a href=&quot;#n82&quot; name=&quot;n82&quot;&gt;82&lt;/a&gt;&lt;/span&gt;
&lt;span class=&quot;line-numbers&quot;&gt; &lt;a href=&quot;#n83&quot; name=&quot;n83&quot;&gt;83&lt;/a&gt;&lt;/span&gt;        cout &amp;lt;&amp;lt; &lt;span style=&quot;background-color:hsla(0,100%,50%,0.05)&quot;&gt;&lt;span style=&quot;color:#710&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span style=&quot;color:#D20&quot;&gt;src:#-&lt;/span&gt;&lt;span style=&quot;color:#710&quot;&gt;&amp;quot;&lt;/span&gt;&lt;/span&gt;;
&lt;span class=&quot;line-numbers&quot;&gt; &lt;a href=&quot;#n84&quot; name=&quot;n84&quot;&gt;84&lt;/a&gt;&lt;/span&gt;        &lt;span style=&quot;color:#080;font-weight:bold&quot;&gt;for&lt;/span&gt;(index = &lt;span style=&quot;color:#00D&quot;&gt;0&lt;/span&gt;; index &amp;lt; len; index++){
&lt;span class=&quot;line-numbers&quot;&gt; &lt;a href=&quot;#n85&quot; name=&quot;n85&quot;&gt;85&lt;/a&gt;&lt;/span&gt;            dst.push_back(src.at(index));
&lt;span class=&quot;line-numbers&quot;&gt; &lt;a href=&quot;#n86&quot; name=&quot;n86&quot;&gt;86&lt;/a&gt;&lt;/span&gt;            cout &amp;lt;&amp;lt; src.at(index) &amp;lt;&amp;lt; &lt;span style=&quot;background-color:hsla(0,100%,50%,0.05)&quot;&gt;&lt;span style=&quot;color:#710&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span style=&quot;color:#D20&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color:#710&quot;&gt;&amp;quot;&lt;/span&gt;&lt;/span&gt;;
&lt;span class=&quot;line-numbers&quot;&gt; &lt;a href=&quot;#n87&quot; name=&quot;n87&quot;&gt;87&lt;/a&gt;&lt;/span&gt;            dst.append(&lt;span style=&quot;background-color:hsla(0,100%,50%,0.05)&quot;&gt;&lt;span style=&quot;color:#710&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span style=&quot;color:#D20&quot;&gt;#&lt;/span&gt;&lt;span style=&quot;color:#710&quot;&gt;&amp;quot;&lt;/span&gt;&lt;/span&gt;);
&lt;span class=&quot;line-numbers&quot;&gt; &lt;a href=&quot;#n88&quot; name=&quot;n88&quot;&gt;88&lt;/a&gt;&lt;/span&gt;            cout &amp;lt;&amp;lt; &lt;span style=&quot;background-color:hsla(0,100%,50%,0.05)&quot;&gt;&lt;span style=&quot;color:#710&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span style=&quot;color:#D20&quot;&gt;#&lt;/span&gt;&lt;span style=&quot;color:#710&quot;&gt;&amp;quot;&lt;/span&gt;&lt;/span&gt;  &amp;lt;&amp;lt; &lt;span style=&quot;background-color:hsla(0,100%,50%,0.05)&quot;&gt;&lt;span style=&quot;color:#710&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span style=&quot;color:#D20&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color:#710&quot;&gt;&amp;quot;&lt;/span&gt;&lt;/span&gt;;
&lt;span class=&quot;line-numbers&quot;&gt; &lt;a href=&quot;#n89&quot; name=&quot;n89&quot;&gt;89&lt;/a&gt;&lt;/span&gt;        }
&lt;span class=&quot;line-numbers&quot;&gt; &lt;strong&gt;&lt;a href=&quot;#n90&quot; name=&quot;n90&quot;&gt;90&lt;/a&gt;&lt;/strong&gt;&lt;/span&gt;        cout &amp;lt;&amp;lt; endl;
&lt;span class=&quot;line-numbers&quot;&gt; &lt;a href=&quot;#n91&quot; name=&quot;n91&quot;&gt;91&lt;/a&gt;&lt;/span&gt;        &lt;span style=&quot;color:#080;font-weight:bold&quot;&gt;return&lt;/span&gt; dst.size();
&lt;span class=&quot;line-numbers&quot;&gt; &lt;a href=&quot;#n92&quot; name=&quot;n92&quot;&gt;92&lt;/a&gt;&lt;/span&gt;    }
&lt;span class=&quot;line-numbers&quot;&gt; &lt;a href=&quot;#n93&quot; name=&quot;n93&quot;&gt;93&lt;/a&gt;&lt;/span&gt;&lt;span style=&quot;color:#088;font-weight:bold&quot;&gt;private&lt;/span&gt;:
&lt;span class=&quot;line-numbers&quot;&gt; &lt;a href=&quot;#n94&quot; name=&quot;n94&quot;&gt;94&lt;/a&gt;&lt;/span&gt;    &lt;span style=&quot;color:#088;font-weight:bold&quot;&gt;void&lt;/span&gt; printVector(vector&amp;lt;&lt;span style=&quot;color:#0a8;font-weight:bold&quot;&gt;int&lt;/span&gt;&amp;gt; &amp;amp;vec){
&lt;span class=&quot;line-numbers&quot;&gt; &lt;a href=&quot;#n95&quot; name=&quot;n95&quot;&gt;95&lt;/a&gt;&lt;/span&gt;        cout &amp;lt;&amp;lt; &lt;span style=&quot;background-color:hsla(0,100%,50%,0.05)&quot;&gt;&lt;span style=&quot;color:#710&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span style=&quot;color:#D20&quot;&gt;res:&lt;/span&gt;&lt;span style=&quot;color:#710&quot;&gt;&amp;quot;&lt;/span&gt;&lt;/span&gt;;
&lt;span class=&quot;line-numbers&quot;&gt; &lt;a href=&quot;#n96&quot; name=&quot;n96&quot;&gt;96&lt;/a&gt;&lt;/span&gt;        &lt;span style=&quot;color:#080;font-weight:bold&quot;&gt;for&lt;/span&gt;(&lt;span style=&quot;color:#0a8;font-weight:bold&quot;&gt;unsigned&lt;/span&gt; &lt;span style=&quot;color:#0a8;font-weight:bold&quot;&gt;int&lt;/span&gt; i = &lt;span style=&quot;color:#00D&quot;&gt;0&lt;/span&gt;; i &amp;lt; vec.size()-&lt;span style=&quot;color:#00D&quot;&gt;1&lt;/span&gt;; i++){
&lt;span class=&quot;line-numbers&quot;&gt; &lt;a href=&quot;#n97&quot; name=&quot;n97&quot;&gt;97&lt;/a&gt;&lt;/span&gt;            cout &amp;lt;&amp;lt; vec.at(i) &amp;lt;&amp;lt; &lt;span style=&quot;background-color:hsla(0,100%,50%,0.05)&quot;&gt;&lt;span style=&quot;color:#710&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span style=&quot;color:#D20&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color:#710&quot;&gt;&amp;quot;&lt;/span&gt;&lt;/span&gt;;
&lt;span class=&quot;line-numbers&quot;&gt; &lt;a href=&quot;#n98&quot; name=&quot;n98&quot;&gt;98&lt;/a&gt;&lt;/span&gt;        }
&lt;span class=&quot;line-numbers&quot;&gt; &lt;a href=&quot;#n99&quot; name=&quot;n99&quot;&gt;99&lt;/a&gt;&lt;/span&gt;        cout &amp;lt;&amp;lt; endl;
&lt;span class=&quot;line-numbers&quot;&gt;&lt;strong&gt;&lt;a href=&quot;#n100&quot; name=&quot;n100&quot;&gt;100&lt;/a&gt;&lt;/strong&gt;&lt;/span&gt;        cout.flush();
&lt;span class=&quot;line-numbers&quot;&gt;&lt;a href=&quot;#n101&quot; name=&quot;n101&quot;&gt;101&lt;/a&gt;&lt;/span&gt;    }
&lt;span class=&quot;line-numbers&quot;&gt;&lt;a href=&quot;#n102&quot; name=&quot;n102&quot;&gt;102&lt;/a&gt;&lt;/span&gt;};
&lt;span class=&quot;line-numbers&quot;&gt;&lt;a href=&quot;#n103&quot; name=&quot;n103&quot;&gt;103&lt;/a&gt;&lt;/span&gt;
&lt;span class=&quot;line-numbers&quot;&gt;&lt;a href=&quot;#n104&quot; name=&quot;n104&quot;&gt;104&lt;/a&gt;&lt;/span&gt;&lt;span style=&quot;color:#0a8;font-weight:bold&quot;&gt;int&lt;/span&gt; main()
&lt;span class=&quot;line-numbers&quot;&gt;&lt;a href=&quot;#n105&quot; name=&quot;n105&quot;&gt;105&lt;/a&gt;&lt;/span&gt;{
&lt;span class=&quot;line-numbers&quot;&gt;&lt;a href=&quot;#n106&quot; name=&quot;n106&quot;&gt;106&lt;/a&gt;&lt;/span&gt;    &lt;span style=&quot;color:#0a8;font-weight:bold&quot;&gt;string&lt;/span&gt; dst(&lt;span style=&quot;background-color:hsla(0,100%,50%,0.05)&quot;&gt;&lt;span style=&quot;color:#710&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span style=&quot;color:#D20&quot;&gt;#&lt;/span&gt;&lt;span style=&quot;color:#710&quot;&gt;&amp;quot;&lt;/span&gt;&lt;/span&gt;);
&lt;span class=&quot;line-numbers&quot;&gt;&lt;a href=&quot;#n107&quot; name=&quot;n107&quot;&gt;107&lt;/a&gt;&lt;/span&gt;    &lt;span style=&quot;color:#0a8;font-weight:bold&quot;&gt;string&lt;/span&gt; src(&lt;span style=&quot;background-color:hsla(0,100%,50%,0.05)&quot;&gt;&lt;span style=&quot;color:#710&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span style=&quot;color:#D20&quot;&gt;1232454232414211&lt;/span&gt;&lt;span style=&quot;color:#710&quot;&gt;&amp;quot;&lt;/span&gt;&lt;/span&gt;);
&lt;span class=&quot;line-numbers&quot;&gt;&lt;a href=&quot;#n108&quot; name=&quot;n108&quot;&gt;108&lt;/a&gt;&lt;/span&gt;    &lt;span style=&quot;color:#0a8;font-weight:bold&quot;&gt;string&lt;/span&gt; src2(&lt;span style=&quot;background-color:hsla(0,100%,50%,0.05)&quot;&gt;&lt;span style=&quot;color:#710&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span style=&quot;color:#D20&quot;&gt;12784487sad22s2f&lt;/span&gt;&lt;span style=&quot;color:#710&quot;&gt;&amp;quot;&lt;/span&gt;&lt;/span&gt;);
&lt;span class=&quot;line-numbers&quot;&gt;&lt;a href=&quot;#n109&quot; name=&quot;n109&quot;&gt;109&lt;/a&gt;&lt;/span&gt;    &lt;span style=&quot;color:#0a8;font-weight:bold&quot;&gt;string&lt;/span&gt; src3(&lt;span style=&quot;background-color:hsla(0,100%,50%,0.05)&quot;&gt;&lt;span style=&quot;color:#710&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span style=&quot;color:#D20&quot;&gt;a&lt;/span&gt;&lt;span style=&quot;color:#710&quot;&gt;&amp;quot;&lt;/span&gt;&lt;/span&gt;);
&lt;span class=&quot;line-numbers&quot;&gt;&lt;strong&gt;&lt;a href=&quot;#n110&quot; name=&quot;n110&quot;&gt;110&lt;/a&gt;&lt;/strong&gt;&lt;/span&gt;    &lt;span style=&quot;color:#0a8;font-weight:bold&quot;&gt;string&lt;/span&gt; src4(&lt;span style=&quot;background-color:hsla(0,100%,50%,0.05)&quot;&gt;&lt;span style=&quot;color:#710&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span style=&quot;color:#D20&quot;&gt;b2&lt;/span&gt;&lt;span style=&quot;color:#710&quot;&gt;&amp;quot;&lt;/span&gt;&lt;/span&gt;);
&lt;span class=&quot;line-numbers&quot;&gt;&lt;a href=&quot;#n111&quot; name=&quot;n111&quot;&gt;111&lt;/a&gt;&lt;/span&gt;
&lt;span class=&quot;line-numbers&quot;&gt;&lt;a href=&quot;#n112&quot; name=&quot;n112&quot;&gt;112&lt;/a&gt;&lt;/span&gt;    LongestPalindromeSolution solu;
&lt;span class=&quot;line-numbers&quot;&gt;&lt;a href=&quot;#n113&quot; name=&quot;n113&quot;&gt;113&lt;/a&gt;&lt;/span&gt;    cout &amp;lt;&amp;lt; solu.longestPalindrome(src3) &amp;lt;&amp;lt; endl;
&lt;span class=&quot;line-numbers&quot;&gt;&lt;a href=&quot;#n114&quot; name=&quot;n114&quot;&gt;114&lt;/a&gt;&lt;/span&gt;    cout &amp;lt;&amp;lt; solu.longestPalindrome(src4) &amp;lt;&amp;lt; endl;
&lt;span class=&quot;line-numbers&quot;&gt;&lt;a href=&quot;#n115&quot; name=&quot;n115&quot;&gt;115&lt;/a&gt;&lt;/span&gt;
&lt;span class=&quot;line-numbers&quot;&gt;&lt;a href=&quot;#n116&quot; name=&quot;n116&quot;&gt;116&lt;/a&gt;&lt;/span&gt;    &lt;span style=&quot;color:#777&quot;&gt;//cout &amp;lt;&amp;lt; solu.convert(src,dst) &amp;lt;&amp;lt; &amp;quot;: &amp;quot; &amp;lt;&amp;lt; dst;&lt;/span&gt;
&lt;span class=&quot;line-numbers&quot;&gt;&lt;a href=&quot;#n117&quot; name=&quot;n117&quot;&gt;117&lt;/a&gt;&lt;/span&gt;    &lt;span style=&quot;color:#080;font-weight:bold&quot;&gt;return&lt;/span&gt; &lt;span style=&quot;color:#00D&quot;&gt;0&lt;/span&gt;;
&lt;span class=&quot;line-numbers&quot;&gt;&lt;a href=&quot;#n118&quot; name=&quot;n118&quot;&gt;118&lt;/a&gt;&lt;/span&gt;}
&lt;span class=&quot;line-numbers&quot;&gt;&lt;a href=&quot;#n119&quot; name=&quot;n119&quot;&gt;119&lt;/a&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;p&gt;最终测试运行耗时8ms，运行效率超过了72%的答案哈哈。&lt;/p&gt;
</description>
        <pubDate>Wed, 16 Sep 2015 00:40:05 +0800</pubDate>
        <link>/2015/09/16/Leetcode-Longest-Palindromic-Substring/</link>
        <guid isPermaLink="true">/2015/09/16/Leetcode-Longest-Palindromic-Substring/</guid>
        
        <category>leetcode</category>
        
        <category>算法</category>
        
        <category>cpp</category>
        
        
        <category>leetcode</category>
        
        <category>算法</category>
        
      </item>
    
      <item>
        <title>[Rails] Ruby &amp; Rails常用技巧集锦</title>
        <description>&lt;h3&gt;Rails使用环境变量&lt;/h3&gt;

&lt;p&gt;Many applications require configuration of settings such as email account credentials or API keys for external services. You can pass local configuration settings to an application using environment variables.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Gmail Example&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Consider an application that uses Gmail to send email messages. Access to Gmail requires a username and password for access to your Gmail account. In your Rails application, you will need to configure these credentials in the file config/environments/production.rb. A portion of the file might look like this:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;config.action_mailer.smtp_settings = {
  address: &quot;smtp.gmail.com&quot;,
  port: 587,
  domain: &quot;example.com&quot;,
  authentication: &quot;plain&quot;,
  enable_starttls_auto: true,
  user_name: ENV[&quot;GMAIL_USERNAME&quot;],
  password: ENV[&quot;GMAIL_PASSWORD&quot;]
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;You could “hardcode” your Gmail username and password into the file but that would expose it to everyone who has access to your git repository. Instead use the Ruby variable &lt;code&gt;ENV[&quot;GMAIL_USERNAME&quot;]&lt;/code&gt; to obtain an environment variable. The variable can be used anywhere in a Rails application. Ruby will replace ENV[“GMAIL_USERNAME”] with an environment variable.&lt;/p&gt;

&lt;p&gt;Let’s consider how to set local environment variables.&lt;/p&gt;

&lt;h3&gt;Ruby提取切片&lt;/h3&gt;

&lt;p&gt;You can get the result you want using collect! or map! to modify the array in-place:&lt;/p&gt;

&lt;div class=&quot;highlighter-coderay&quot;&gt;&lt;div class=&quot;CodeRay&quot;&gt;
  &lt;div class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line-numbers&quot;&gt; &lt;a href=&quot;#n1&quot; name=&quot;n1&quot;&gt;1&lt;/a&gt;&lt;/span&gt;&lt;span style=&quot;color:#777&quot;&gt;# 1. collect&lt;/span&gt;
&lt;span class=&quot;line-numbers&quot;&gt; &lt;a href=&quot;#n2&quot; name=&quot;n2&quot;&gt;2&lt;/a&gt;&lt;/span&gt;x = &lt;span style=&quot;background-color:hsla(0,100%,50%,0.05)&quot;&gt;&lt;span style=&quot;color:#710&quot;&gt;%w(&lt;/span&gt;&lt;span style=&quot;color:#D20&quot;&gt;hello there world&lt;/span&gt;&lt;span style=&quot;color:#710&quot;&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line-numbers&quot;&gt; &lt;a href=&quot;#n3&quot; name=&quot;n3&quot;&gt;3&lt;/a&gt;&lt;/span&gt;x.collect! { |element|
&lt;span class=&quot;line-numbers&quot;&gt; &lt;a href=&quot;#n4&quot; name=&quot;n4&quot;&gt;4&lt;/a&gt;&lt;/span&gt;  (element == &lt;span style=&quot;background-color:hsla(0,100%,50%,0.05)&quot;&gt;&lt;span style=&quot;color:#710&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span style=&quot;color:#D20&quot;&gt;hello&lt;/span&gt;&lt;span style=&quot;color:#710&quot;&gt;&amp;quot;&lt;/span&gt;&lt;/span&gt;) ? &lt;span style=&quot;background-color:hsla(0,100%,50%,0.05)&quot;&gt;&lt;span style=&quot;color:#710&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span style=&quot;color:#D20&quot;&gt;hi&lt;/span&gt;&lt;span style=&quot;color:#710&quot;&gt;&amp;quot;&lt;/span&gt;&lt;/span&gt; : element
&lt;span class=&quot;line-numbers&quot;&gt; &lt;a href=&quot;#n5&quot; name=&quot;n5&quot;&gt;5&lt;/a&gt;&lt;/span&gt;}
&lt;span class=&quot;line-numbers&quot;&gt; &lt;a href=&quot;#n6&quot; name=&quot;n6&quot;&gt;6&lt;/a&gt;&lt;/span&gt;puts x
&lt;span class=&quot;line-numbers&quot;&gt; &lt;a href=&quot;#n7&quot; name=&quot;n7&quot;&gt;7&lt;/a&gt;&lt;/span&gt;
&lt;span class=&quot;line-numbers&quot;&gt; &lt;a href=&quot;#n8&quot; name=&quot;n8&quot;&gt;8&lt;/a&gt;&lt;/span&gt;&lt;span style=&quot;color:#777&quot;&gt;# 2. map&lt;/span&gt;
&lt;span class=&quot;line-numbers&quot;&gt; &lt;a href=&quot;#n9&quot; name=&quot;n9&quot;&gt;9&lt;/a&gt;&lt;/span&gt;x = &lt;span style=&quot;background-color:hsla(0,100%,50%,0.05)&quot;&gt;&lt;span style=&quot;color:#710&quot;&gt;%w(&lt;/span&gt;&lt;span style=&quot;color:#D20&quot;&gt;hello there world&lt;/span&gt;&lt;span style=&quot;color:#710&quot;&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line-numbers&quot;&gt;&lt;strong&gt;&lt;a href=&quot;#n10&quot; name=&quot;n10&quot;&gt;10&lt;/a&gt;&lt;/strong&gt;&lt;/span&gt;x.map! { |element|
&lt;span class=&quot;line-numbers&quot;&gt;&lt;a href=&quot;#n11&quot; name=&quot;n11&quot;&gt;11&lt;/a&gt;&lt;/span&gt;  &lt;span style=&quot;color:#080;font-weight:bold&quot;&gt;if&lt;/span&gt;(element == &lt;span style=&quot;background-color:hsla(0,100%,50%,0.05)&quot;&gt;&lt;span style=&quot;color:#710&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span style=&quot;color:#D20&quot;&gt;hello&lt;/span&gt;&lt;span style=&quot;color:#710&quot;&gt;&amp;quot;&lt;/span&gt;&lt;/span&gt;)
&lt;span class=&quot;line-numbers&quot;&gt;&lt;a href=&quot;#n12&quot; name=&quot;n12&quot;&gt;12&lt;/a&gt;&lt;/span&gt;      &lt;span style=&quot;background-color:hsla(0,100%,50%,0.05)&quot;&gt;&lt;span style=&quot;color:#710&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span style=&quot;color:#D20&quot;&gt;hi&lt;/span&gt;&lt;span style=&quot;color:#710&quot;&gt;&amp;quot;&lt;/span&gt;&lt;/span&gt; &lt;span style=&quot;color:#777&quot;&gt;# change &amp;quot;hello&amp;quot; to &amp;quot;hi&amp;quot;&lt;/span&gt;
&lt;span class=&quot;line-numbers&quot;&gt;&lt;a href=&quot;#n13&quot; name=&quot;n13&quot;&gt;13&lt;/a&gt;&lt;/span&gt;  &lt;span style=&quot;color:#080;font-weight:bold&quot;&gt;else&lt;/span&gt;
&lt;span class=&quot;line-numbers&quot;&gt;&lt;a href=&quot;#n14&quot; name=&quot;n14&quot;&gt;14&lt;/a&gt;&lt;/span&gt;      element
&lt;span class=&quot;line-numbers&quot;&gt;&lt;a href=&quot;#n15&quot; name=&quot;n15&quot;&gt;15&lt;/a&gt;&lt;/span&gt;  &lt;span style=&quot;color:#080;font-weight:bold&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;line-numbers&quot;&gt;&lt;a href=&quot;#n16&quot; name=&quot;n16&quot;&gt;16&lt;/a&gt;&lt;/span&gt;}
&lt;span class=&quot;line-numbers&quot;&gt;&lt;a href=&quot;#n17&quot; name=&quot;n17&quot;&gt;17&lt;/a&gt;&lt;/span&gt;puts x &lt;span style=&quot;color:#777&quot;&gt;# output: [hi there world]&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;p&gt;At each iteration, the element is replaced into the array by the value returned by the block.&lt;/p&gt;

</description>
        <pubDate>Thu, 27 Aug 2015 18:35:20 +0800</pubDate>
        <link>/2015/08/27/Rails-Tips/</link>
        <guid isPermaLink="true">/2015/08/27/Rails-Tips/</guid>
        
        <category>Shell</category>
        
        <category>Ruby</category>
        
        
        <category>ruby</category>
        
      </item>
    
      <item>
        <title>[CPP] Boost库概要</title>
        <description>&lt;p&gt;Boost和STL库是C++的血肉，C++的语言特性本身则是筋骨。现在在用的Qt库本身大而全，用起来方便，最重要的是跨平台，嵌入式用户交互方面的不二选择。&lt;/p&gt;

&lt;p&gt;目前使用Boost库的需求不是很充分，因为Qt在大部分应用上都可以胜任。不过Boost以效率和稳定颇有声誉，作为C++标准化新特性的重要参考，可略作了解。&lt;/p&gt;

&lt;h3&gt;文本处理&lt;/h3&gt;

&lt;h4&gt;Boost.Regex&lt;/h4&gt;

&lt;p&gt;解决大量匹配问题的正则表达式库。不必羡慕perl、awk和sed。&lt;/p&gt;

&lt;h4&gt;Boost.Spirit &amp;amp; Boost.Tokenizer&lt;/h4&gt;

&lt;p&gt;Spirit是一个语法生成框架，可以使用其构建命令分析器以及简单的语言处理器。想想Bison和flex就明白了。&lt;/p&gt;

&lt;h4&gt;Boost.String_algo&lt;/h4&gt;

&lt;p&gt;可以视为String类的扩展算法工具集。提供大小写转换、空格清除、分割、查找替换等扩展算法工具。&lt;/p&gt;

&lt;p&gt;###容器和算法&lt;/p&gt;

&lt;p&gt;一些比较经典常用的数据结构和算法的实现。&lt;/p&gt;

&lt;h4&gt;Boost.Array&lt;/h4&gt;

&lt;p&gt;有了Vector这玩意儿然并卵。除了基本的数组功能，提供类型安全而不牺牲性能，=_=，窃以为C++很多安全性的封装如智能指针，让用它的愚蠢程序员更加愚蠢，让用它的聪明程序员变得愚蠢。&lt;/p&gt;

&lt;h4&gt;Boost.MultiArray&lt;/h4&gt;

&lt;p&gt;多维容器。做矩阵计算的一定会喜欢。Vector二维以上数组声明都觉得麻烦。&lt;/p&gt;

&lt;h4&gt;Boost.Graph&lt;/h4&gt;

&lt;p&gt;泛型图算法工具集，包含邻接链表、邻接矩阵和边列表。提供Dijsktra最短路径算法，K最小生成树算法、拓扑逻辑排序等经典算法。&lt;/p&gt;

&lt;h4&gt;Boost.Multi-index&lt;/h4&gt;

&lt;p&gt;为底层容器提供多个索引，一个底层的容器可以有不同的排序方法和不同的访问语义。当std::set 和 std::map 不够用时,就可以用Boost.Multi-index,通常是在需要为查找元素而维护多个索引时。&lt;br /&gt;
不太了解，做稍微复杂的数据索引时应该会用到。&lt;/p&gt;

&lt;h4&gt;Boost.Range&lt;/h4&gt;

&lt;p&gt;用过Python/Ruby的Rang后秒懂。&lt;/p&gt;

&lt;h4&gt;Boost.Tunple&lt;/h4&gt;

&lt;p&gt;STL的pair不支持n-tunples，一般用自定义struct或者class实现，这个类模板支持直接声明和使用,如函数返回类型或参数,并提供一个泛型的方法来访问tuple的元素。&lt;/p&gt;

&lt;h4&gt;Boost.Variant&lt;/h4&gt;

&lt;p&gt;泛型类型的操作和转换。Qt中有类似的Qvariant。&lt;/p&gt;

&lt;p&gt;###函数对象&lt;/p&gt;

&lt;h4&gt;Boost.bind&lt;/h4&gt;

&lt;p&gt;&lt;strong&gt;bind简介&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;这个是重头戏，bind、函数对象、signal/slot等特性经常会用。&lt;br /&gt;
我觉得bind最重要的作用是：&lt;code&gt;改变参数的顺序&lt;/code&gt;，这使得我们可以少创建一些类似功能参数不同或者参数冗余的函数对象，减少代码量，使行为局部化。虽然标准库已经提供了一些可用的工具,如 bind1st 和 bind2nd, 但是这不够用，bind由此产生。&lt;/p&gt;

&lt;p&gt;Bind是对标准库的绑定器 bind1st和bind2nd的泛化,返回值是一个函数对象。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;bind范例&lt;/strong&gt;&lt;/p&gt;

&lt;div class=&quot;highlighter-coderay&quot;&gt;&lt;div class=&quot;CodeRay&quot;&gt;
  &lt;div class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line-numbers&quot;&gt; &lt;a href=&quot;#n1&quot; name=&quot;n1&quot;&gt;1&lt;/a&gt;&lt;/span&gt;&lt;span style=&quot;color:#579&quot;&gt;#include&lt;/span&gt; &lt;span style=&quot;color:#B44;font-weight:bold&quot;&gt;&amp;lt;iostream&amp;gt;&lt;/span&gt;
&lt;span class=&quot;line-numbers&quot;&gt; &lt;a href=&quot;#n2&quot; name=&quot;n2&quot;&gt;2&lt;/a&gt;&lt;/span&gt;&lt;span style=&quot;color:#579&quot;&gt;#include&lt;/span&gt; &lt;span style=&quot;color:#B44;font-weight:bold&quot;&gt;&amp;lt;string&amp;gt;&lt;/span&gt;
&lt;span class=&quot;line-numbers&quot;&gt; &lt;a href=&quot;#n3&quot; name=&quot;n3&quot;&gt;3&lt;/a&gt;&lt;/span&gt;&lt;span style=&quot;color:#579&quot;&gt;#include&lt;/span&gt; &lt;span style=&quot;color:#B44;font-weight:bold&quot;&gt;&amp;lt;vector&amp;gt;&lt;/span&gt;
&lt;span class=&quot;line-numbers&quot;&gt; &lt;a href=&quot;#n4&quot; name=&quot;n4&quot;&gt;4&lt;/a&gt;&lt;/span&gt;&lt;span style=&quot;color:#579&quot;&gt;#include&lt;/span&gt; &lt;span style=&quot;color:#B44;font-weight:bold&quot;&gt;&amp;lt;algorithm&amp;gt;&lt;/span&gt;
&lt;span class=&quot;line-numbers&quot;&gt; &lt;a href=&quot;#n5&quot; name=&quot;n5&quot;&gt;5&lt;/a&gt;&lt;/span&gt;
&lt;span class=&quot;line-numbers&quot;&gt; &lt;a href=&quot;#n6&quot; name=&quot;n6&quot;&gt;6&lt;/a&gt;&lt;/span&gt;&lt;span style=&quot;color:#579&quot;&gt;#include&lt;/span&gt; &lt;span style=&quot;color:#B44;font-weight:bold&quot;&gt;&amp;quot;boost/bind.hpp&amp;quot;&lt;/span&gt;
&lt;span class=&quot;line-numbers&quot;&gt; &lt;a href=&quot;#n7&quot; name=&quot;n7&quot;&gt;7&lt;/a&gt;&lt;/span&gt;
&lt;span class=&quot;line-numbers&quot;&gt; &lt;a href=&quot;#n8&quot; name=&quot;n8&quot;&gt;8&lt;/a&gt;&lt;/span&gt;&lt;span style=&quot;color:#080;font-weight:bold&quot;&gt;class&lt;/span&gt; &lt;span style=&quot;color:#B06;font-weight:bold&quot;&gt;status&lt;/span&gt; {
&lt;span class=&quot;line-numbers&quot;&gt; &lt;a href=&quot;#n9&quot; name=&quot;n9&quot;&gt;9&lt;/a&gt;&lt;/span&gt;    std::&lt;span style=&quot;color:#0a8;font-weight:bold&quot;&gt;string&lt;/span&gt; name;
&lt;span class=&quot;line-numbers&quot;&gt;&lt;strong&gt;&lt;a href=&quot;#n10&quot; name=&quot;n10&quot;&gt;10&lt;/a&gt;&lt;/strong&gt;&lt;/span&gt;    &lt;span style=&quot;color:#0a8;font-weight:bold&quot;&gt;bool&lt;/span&gt; ok;
&lt;span class=&quot;line-numbers&quot;&gt;&lt;a href=&quot;#n11&quot; name=&quot;n11&quot;&gt;11&lt;/a&gt;&lt;/span&gt;&lt;span style=&quot;color:#088;font-weight:bold&quot;&gt;public&lt;/span&gt;:
&lt;span class=&quot;line-numbers&quot;&gt;&lt;a href=&quot;#n12&quot; name=&quot;n12&quot;&gt;12&lt;/a&gt;&lt;/span&gt;    status(&lt;span style=&quot;color:#088;font-weight:bold&quot;&gt;const&lt;/span&gt; std::&lt;span style=&quot;color:#0a8;font-weight:bold&quot;&gt;string&lt;/span&gt;&amp;amp; name):name(name),ok(&lt;span style=&quot;color:#069&quot;&gt;true&lt;/span&gt;) {}
&lt;span class=&quot;line-numbers&quot;&gt;&lt;a href=&quot;#n13&quot; name=&quot;n13&quot;&gt;13&lt;/a&gt;&lt;/span&gt;    &lt;span style=&quot;color:#088;font-weight:bold&quot;&gt;void&lt;/span&gt; break_it() {
&lt;span class=&quot;line-numbers&quot;&gt;&lt;a href=&quot;#n14&quot; name=&quot;n14&quot;&gt;14&lt;/a&gt;&lt;/span&gt;        ok=&lt;span style=&quot;color:#069&quot;&gt;false&lt;/span&gt;;
&lt;span class=&quot;line-numbers&quot;&gt;&lt;a href=&quot;#n15&quot; name=&quot;n15&quot;&gt;15&lt;/a&gt;&lt;/span&gt;    }
&lt;span class=&quot;line-numbers&quot;&gt;&lt;a href=&quot;#n16&quot; name=&quot;n16&quot;&gt;16&lt;/a&gt;&lt;/span&gt;    &lt;span style=&quot;color:#0a8;font-weight:bold&quot;&gt;bool&lt;/span&gt; is_broken() &lt;span style=&quot;color:#088;font-weight:bold&quot;&gt;const&lt;/span&gt; {
&lt;span class=&quot;line-numbers&quot;&gt;&lt;a href=&quot;#n17&quot; name=&quot;n17&quot;&gt;17&lt;/a&gt;&lt;/span&gt;        &lt;span style=&quot;color:#080;font-weight:bold&quot;&gt;return&lt;/span&gt; ok;
&lt;span class=&quot;line-numbers&quot;&gt;&lt;a href=&quot;#n18&quot; name=&quot;n18&quot;&gt;18&lt;/a&gt;&lt;/span&gt;    }
&lt;span class=&quot;line-numbers&quot;&gt;&lt;a href=&quot;#n19&quot; name=&quot;n19&quot;&gt;19&lt;/a&gt;&lt;/span&gt;    &lt;span style=&quot;color:#088;font-weight:bold&quot;&gt;void&lt;/span&gt; report() &lt;span style=&quot;color:#088;font-weight:bold&quot;&gt;const&lt;/span&gt; {
&lt;span class=&quot;line-numbers&quot;&gt;&lt;strong&gt;&lt;a href=&quot;#n20&quot; name=&quot;n20&quot;&gt;20&lt;/a&gt;&lt;/strong&gt;&lt;/span&gt;        std::cout &amp;lt;&amp;lt; name &amp;lt;&amp;lt; &lt;span style=&quot;background-color:hsla(0,100%,50%,0.05)&quot;&gt;&lt;span style=&quot;color:#710&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span style=&quot;color:#D20&quot;&gt; is &lt;/span&gt;&lt;span style=&quot;color:#710&quot;&gt;&amp;quot;&lt;/span&gt;&lt;/span&gt; &amp;lt;&amp;lt;
&lt;span class=&quot;line-numbers&quot;&gt;&lt;a href=&quot;#n21&quot; name=&quot;n21&quot;&gt;21&lt;/a&gt;&lt;/span&gt;                    (ok ? &lt;span style=&quot;background-color:hsla(0,100%,50%,0.05)&quot;&gt;&lt;span style=&quot;color:#710&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span style=&quot;color:#D20&quot;&gt;working nominally&lt;/span&gt;&lt;span style=&quot;color:#710&quot;&gt;&amp;quot;&lt;/span&gt;&lt;/span&gt;:&lt;span style=&quot;background-color:hsla(0,100%,50%,0.05)&quot;&gt;&lt;span style=&quot;color:#710&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span style=&quot;color:#D20&quot;&gt;terribly broken&lt;/span&gt;&lt;span style=&quot;color:#710&quot;&gt;&amp;quot;&lt;/span&gt;&lt;/span&gt;) &amp;lt;&amp;lt; &lt;span style=&quot;color:#D20&quot;&gt;&#39;\n&#39;&lt;/span&gt;;
&lt;span class=&quot;line-numbers&quot;&gt;&lt;a href=&quot;#n22&quot; name=&quot;n22&quot;&gt;22&lt;/a&gt;&lt;/span&gt;    }
&lt;span class=&quot;line-numbers&quot;&gt;&lt;a href=&quot;#n23&quot; name=&quot;n23&quot;&gt;23&lt;/a&gt;&lt;/span&gt;};
&lt;span class=&quot;line-numbers&quot;&gt;&lt;a href=&quot;#n24&quot; name=&quot;n24&quot;&gt;24&lt;/a&gt;&lt;/span&gt;
&lt;span class=&quot;line-numbers&quot;&gt;&lt;a href=&quot;#n25&quot; name=&quot;n25&quot;&gt;25&lt;/a&gt;&lt;/span&gt;&lt;span style=&quot;color:#088;font-weight:bold&quot;&gt;void&lt;/span&gt; bind_test()
&lt;span class=&quot;line-numbers&quot;&gt;&lt;a href=&quot;#n26&quot; name=&quot;n26&quot;&gt;26&lt;/a&gt;&lt;/span&gt;{
&lt;span class=&quot;line-numbers&quot;&gt;&lt;a href=&quot;#n27&quot; name=&quot;n27&quot;&gt;27&lt;/a&gt;&lt;/span&gt;    std::vector&amp;lt;status&amp;gt; statuses;
&lt;span class=&quot;line-numbers&quot;&gt;&lt;a href=&quot;#n28&quot; name=&quot;n28&quot;&gt;28&lt;/a&gt;&lt;/span&gt;    statuses.push_back(status(&lt;span style=&quot;background-color:hsla(0,100%,50%,0.05)&quot;&gt;&lt;span style=&quot;color:#710&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span style=&quot;color:#D20&quot;&gt;status 1&lt;/span&gt;&lt;span style=&quot;color:#710&quot;&gt;&amp;quot;&lt;/span&gt;&lt;/span&gt;));
&lt;span class=&quot;line-numbers&quot;&gt;&lt;a href=&quot;#n29&quot; name=&quot;n29&quot;&gt;29&lt;/a&gt;&lt;/span&gt;    statuses.push_back(status(&lt;span style=&quot;background-color:hsla(0,100%,50%,0.05)&quot;&gt;&lt;span style=&quot;color:#710&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span style=&quot;color:#D20&quot;&gt;status 2&lt;/span&gt;&lt;span style=&quot;color:#710&quot;&gt;&amp;quot;&lt;/span&gt;&lt;/span&gt;));
&lt;span class=&quot;line-numbers&quot;&gt;&lt;strong&gt;&lt;a href=&quot;#n30&quot; name=&quot;n30&quot;&gt;30&lt;/a&gt;&lt;/strong&gt;&lt;/span&gt;    statuses.push_back(status(&lt;span style=&quot;background-color:hsla(0,100%,50%,0.05)&quot;&gt;&lt;span style=&quot;color:#710&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span style=&quot;color:#D20&quot;&gt;status 3&lt;/span&gt;&lt;span style=&quot;color:#710&quot;&gt;&amp;quot;&lt;/span&gt;&lt;/span&gt;));
&lt;span class=&quot;line-numbers&quot;&gt;&lt;a href=&quot;#n31&quot; name=&quot;n31&quot;&gt;31&lt;/a&gt;&lt;/span&gt;    statuses.push_back(status(&lt;span style=&quot;background-color:hsla(0,100%,50%,0.05)&quot;&gt;&lt;span style=&quot;color:#710&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span style=&quot;color:#D20&quot;&gt;status 4&lt;/span&gt;&lt;span style=&quot;color:#710&quot;&gt;&amp;quot;&lt;/span&gt;&lt;/span&gt;));
&lt;span class=&quot;line-numbers&quot;&gt;&lt;a href=&quot;#n32&quot; name=&quot;n32&quot;&gt;32&lt;/a&gt;&lt;/span&gt;    statuses[&lt;span style=&quot;color:#00D&quot;&gt;1&lt;/span&gt;].break_it();
&lt;span class=&quot;line-numbers&quot;&gt;&lt;a href=&quot;#n33&quot; name=&quot;n33&quot;&gt;33&lt;/a&gt;&lt;/span&gt;    statuses[&lt;span style=&quot;color:#00D&quot;&gt;2&lt;/span&gt;].break_it();
&lt;span class=&quot;line-numbers&quot;&gt;&lt;a href=&quot;#n34&quot; name=&quot;n34&quot;&gt;34&lt;/a&gt;&lt;/span&gt;
&lt;span class=&quot;line-numbers&quot;&gt;&lt;a href=&quot;#n35&quot; name=&quot;n35&quot;&gt;35&lt;/a&gt;&lt;/span&gt;&lt;span style=&quot;color:#777&quot;&gt;#if 0&lt;/span&gt;
&lt;span class=&quot;line-numbers&quot;&gt;&lt;a href=&quot;#n36&quot; name=&quot;n36&quot;&gt;36&lt;/a&gt;&lt;/span&gt;&lt;span style=&quot;color:#777&quot;&gt;    // 这个循环正确地完成了任务,但它是冗长、低效的(由于要多次调用statuses.end()),并且不象使用标准库算&lt;/span&gt;
&lt;span class=&quot;line-numbers&quot;&gt;&lt;a href=&quot;#n37&quot; name=&quot;n37&quot;&gt;37&lt;/a&gt;&lt;/span&gt;&lt;span style=&quot;color:#777&quot;&gt;    // 法for_each那样清楚地表明意图。为了用for_each 来替换这个循环,我们需要用一个适配器来对vector元素&lt;/span&gt;
&lt;span class=&quot;line-numbers&quot;&gt;&lt;a href=&quot;#n38&quot; name=&quot;n38&quot;&gt;38&lt;/a&gt;&lt;/span&gt;&lt;span style=&quot;color:#777&quot;&gt;    // 调用成员函数report。这时,由于元素是以值的方式保存的,我们需要的是适配器mem_fun_ref&lt;/span&gt;
&lt;span class=&quot;line-numbers&quot;&gt;&lt;a href=&quot;#n39&quot; name=&quot;n39&quot;&gt;39&lt;/a&gt;&lt;/span&gt;&lt;span style=&quot;color:#777&quot;&gt;    for (std::vector&amp;lt;status&amp;gt;::iterator it=statuses.begin();&lt;/span&gt;
&lt;span class=&quot;line-numbers&quot;&gt;&lt;strong&gt;&lt;a href=&quot;#n40&quot; name=&quot;n40&quot;&gt;40&lt;/a&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span style=&quot;color:#777&quot;&gt;        it!=statuses.end();++it) {&lt;/span&gt;
&lt;span class=&quot;line-numbers&quot;&gt;&lt;a href=&quot;#n41&quot; name=&quot;n41&quot;&gt;41&lt;/a&gt;&lt;/span&gt;&lt;span style=&quot;color:#777&quot;&gt;        it-&amp;gt;report();&lt;/span&gt;
&lt;span class=&quot;line-numbers&quot;&gt;&lt;a href=&quot;#n42&quot; name=&quot;n42&quot;&gt;42&lt;/a&gt;&lt;/span&gt;&lt;span style=&quot;color:#777&quot;&gt;    }&lt;/span&gt;
&lt;span class=&quot;line-numbers&quot;&gt;&lt;a href=&quot;#n43&quot; name=&quot;n43&quot;&gt;43&lt;/a&gt;&lt;/span&gt;&lt;span style=&quot;color:#777&quot;&gt;#else&lt;/span&gt;
&lt;span class=&quot;line-numbers&quot;&gt;&lt;a href=&quot;#n44&quot; name=&quot;n44&quot;&gt;44&lt;/a&gt;&lt;/span&gt;    &lt;span style=&quot;color:#777&quot;&gt;// for_each(str.begin(), str.end(), (mem_fun(&amp;amp;funtest::doSth),this));&lt;/span&gt;
&lt;span class=&quot;line-numbers&quot;&gt;&lt;a href=&quot;#n45&quot; name=&quot;n45&quot;&gt;45&lt;/a&gt;&lt;/span&gt;    &lt;span style=&quot;color:#777&quot;&gt;// 把str中的每个元素作为参数送到第三个参数（是个函数的指针）所指向的函数。&lt;/span&gt;
&lt;span class=&quot;line-numbers&quot;&gt;&lt;a href=&quot;#n46&quot; name=&quot;n46&quot;&gt;46&lt;/a&gt;&lt;/span&gt;    std::for_each( statuses.begin(),statuses.end(),
&lt;span class=&quot;line-numbers&quot;&gt;&lt;a href=&quot;#n47&quot; name=&quot;n47&quot;&gt;47&lt;/a&gt;&lt;/span&gt;                    boost::bind(&amp;amp;status::report,_1));
&lt;span class=&quot;line-numbers&quot;&gt;&lt;a href=&quot;#n48&quot; name=&quot;n48&quot;&gt;48&lt;/a&gt;&lt;/span&gt;&lt;span style=&quot;color:#579&quot;&gt;#endif&lt;/span&gt;
&lt;span class=&quot;line-numbers&quot;&gt;&lt;a href=&quot;#n49&quot; name=&quot;n49&quot;&gt;49&lt;/a&gt;&lt;/span&gt;}
&lt;span class=&quot;line-numbers&quot;&gt;&lt;strong&gt;&lt;a href=&quot;#n50&quot; name=&quot;n50&quot;&gt;50&lt;/a&gt;&lt;/strong&gt;&lt;/span&gt;
&lt;span class=&quot;line-numbers&quot;&gt;&lt;a href=&quot;#n51&quot; name=&quot;n51&quot;&gt;51&lt;/a&gt;&lt;/span&gt;&lt;span style=&quot;color:#0a8;font-weight:bold&quot;&gt;int&lt;/span&gt; main(&lt;span style=&quot;color:#0a8;font-weight:bold&quot;&gt;int&lt;/span&gt; , &lt;span style=&quot;color:#0a8;font-weight:bold&quot;&gt;char&lt;/span&gt; **)
&lt;span class=&quot;line-numbers&quot;&gt;&lt;a href=&quot;#n52&quot; name=&quot;n52&quot;&gt;52&lt;/a&gt;&lt;/span&gt;{
&lt;span class=&quot;line-numbers&quot;&gt;&lt;a href=&quot;#n53&quot; name=&quot;n53&quot;&gt;53&lt;/a&gt;&lt;/span&gt;    bind_test();
&lt;span class=&quot;line-numbers&quot;&gt;&lt;a href=&quot;#n54&quot; name=&quot;n54&quot;&gt;54&lt;/a&gt;&lt;/span&gt;    &lt;span style=&quot;color:#080;font-weight:bold&quot;&gt;return&lt;/span&gt; &lt;span style=&quot;color:#00D&quot;&gt;0&lt;/span&gt;;
&lt;span class=&quot;line-numbers&quot;&gt;&lt;a href=&quot;#n55&quot; name=&quot;n55&quot;&gt;55&lt;/a&gt;&lt;/span&gt;}
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;p&gt;上面&lt;code&gt;std::for_each( statuses.begin(),statuses.end(),boost::bind(&amp;amp;status::report,_1));&lt;/code&gt;中的那一个占位符让人很迷惑。&lt;br /&gt;
实际上，类成员函数的绑定不同于匿名函数的绑定，成员函数必须有一个父对象或者指针，才能经过this进行调用，而匿名函数可以直接进行()操作,&lt;br /&gt;
因此bind需要“牺牲”一位占位符要求用户提供类的实例、指针或者引用，用过对象作为第一个参数来调用成员函数。&lt;br /&gt;
即&lt;code&gt;bind(&amp;amp;x::func,x,_1,_2...)&lt;/code&gt;最多只能绑定8位参数。&lt;/p&gt;

&lt;p&gt;假设我们有一个类&lt;/p&gt;

&lt;div class=&quot;highlighter-coderay&quot;&gt;&lt;div class=&quot;CodeRay&quot;&gt;
  &lt;div class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line-numbers&quot;&gt;&lt;a href=&quot;#n1&quot; name=&quot;n1&quot;&gt;1&lt;/a&gt;&lt;/span&gt;&lt;span style=&quot;color:#080;font-weight:bold&quot;&gt;class&lt;/span&gt; &lt;span style=&quot;color:#B06;font-weight:bold&quot;&gt;ClassA&lt;/span&gt;{
&lt;span class=&quot;line-numbers&quot;&gt;&lt;a href=&quot;#n2&quot; name=&quot;n2&quot;&gt;2&lt;/a&gt;&lt;/span&gt;&lt;span style=&quot;color:#088;font-weight:bold&quot;&gt;public&lt;/span&gt;:
&lt;span class=&quot;line-numbers&quot;&gt;&lt;a href=&quot;#n3&quot; name=&quot;n3&quot;&gt;3&lt;/a&gt;&lt;/span&gt;    &lt;span style=&quot;color:#0a8;font-weight:bold&quot;&gt;int&lt;/span&gt; f(&lt;span style=&quot;color:#0a8;font-weight:bold&quot;&gt;int&lt;/span&gt; a, &lt;span style=&quot;color:#0a8;font-weight:bold&quot;&gt;int&lt;/span&gt; b){&lt;span style=&quot;color:#080;font-weight:bold&quot;&gt;return&lt;/span&gt; a+b;}
&lt;span class=&quot;line-numbers&quot;&gt;&lt;a href=&quot;#n4&quot; name=&quot;n4&quot;&gt;4&lt;/a&gt;&lt;/span&gt;};
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;以下三种绑定都是成立的&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;ClassA obj, &amp;amp;obj_ref=obj;
ClassA *obj_ptr = &amp;amp;obj

cout &amp;lt;&amp;lt; bind(&amp;amp;obj::f, obj, _1, 20)(10) &amp;lt;&amp;lt; endl;
cout &amp;lt;&amp;lt; bind(&amp;amp;obj::f, obj_ref, _1, _2)(10,20) &amp;lt;&amp;lt; endl;
cout &amp;lt;&amp;lt; bind(&amp;amp;obj::f, obj_ptr, _1, _2)(10,20) &amp;lt;&amp;lt; endl;

&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;bind的内部实现&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;bind的实现主要依靠：&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;对()运算符的重载&lt;/li&gt;
  &lt;li&gt;空间内置占位符变量&lt;/li&gt;
  &lt;li&gt;函数对象的调用&lt;/li&gt;
  &lt;li&gt;泛型支持&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;看了实现解析并没有说的那么&lt;code&gt;黑魔法&lt;/code&gt;。要说黑魔法，lamba才算是。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;其他&lt;/strong&gt;&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;boost::bind() 返回的函数对象会保存要绑定的实参. 而且总是拷贝一份以值的方式保存..&lt;/li&gt;
&lt;/ol&gt;

&lt;h4&gt;Boost.signals2&lt;/h4&gt;

&lt;p&gt;signals2基于signals实现的一个线程安全信号/插槽模型。主要功能类似Qt的信号/插槽模型，对于事件处理系统相当有用。&lt;/p&gt;

&lt;h3&gt;并发处理&lt;/h3&gt;

&lt;h4&gt;thread&lt;/h4&gt;

&lt;p&gt;支持最广泛的windows和posix线程，所以跨平台能力比较好，包含创建销毁等待、线程（组）管理、同步等基本功能，多线程封装的库虽然能够简化编程过程，但是写好并发程序其实是另外一回事。就像一个拿好刀的厨师不一定能做出一手好菜一样。&lt;/p&gt;

&lt;h4&gt;asio&lt;/h4&gt;

&lt;p&gt;asio主要关注网络通信。使用大量的类封装了socket api，提供了一些cpp接口的网络编程接口，支持tcp/icmp/udp等常用协议。总而言之，使用asio可以大量简化、可靠的socket同步/异步编程类，比用C从最小服务器/客户端程序写起要好很多，我们不需要一遍遍造毫无创意的轮子。&lt;/p&gt;

&lt;h3&gt;其他&lt;/h3&gt;

&lt;p&gt;有个支持python的扩展库–写过python的人应该直到python可以用cpp扩展，两者的区别就一个是在cpp程序里调用python程序，一个是使用cpp实现/重写自定义python组件并调用。&lt;/p&gt;

&lt;h3&gt;关于boost和Cpp&lt;/h3&gt;

&lt;p&gt;Boost库给总是给我一种古怪的感觉。cpp是一门糟糕的设计语言，但是在很多系统层应用场合，无法使用更加高级的解释性语言的情况下，cpp比c更有生产力而不输效率。&lt;/p&gt;

&lt;p&gt;参考书籍:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Boost documents&lt;/li&gt;
  &lt;li&gt;Boost程序库完全开发指南&lt;/li&gt;
  &lt;li&gt;Beyond the C++ Standard Library&lt;/li&gt;
&lt;/ul&gt;

</description>
        <pubDate>Mon, 03 Aug 2015 03:30:25 +0800</pubDate>
        <link>/2015/08/03/boost-learning/</link>
        <guid isPermaLink="true">/2015/08/03/boost-learning/</guid>
        
        <category>c++</category>
        
        <category>boost</category>
        
        
        <category>cpp</category>
        
      </item>
    
  </channel>
</rss>
